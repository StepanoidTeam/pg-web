{"version":3,"sources":["assets/wires-20.svg","assets/connection-from.svg","assets/connection-to.svg","assets/path-cost-copper-10.svg","assets/path-cost-silver-20.svg","assets/path-cost-goldish-25.svg","assets/path-cost-gold.svg","services/cookie.service.js","use-global.js","components/auth/auth-route.jsx","config.js","services/api-request.js","services/version.service.js","components/version-holder.js","components/common/input.jsx","components/auth/login.jsx","components/auth/register.jsx","components/auth/status-holder.jsx","services/auth.service.js","components/auth/anon-route.jsx","components/rooms/rooms-list.jsx","services/room.service.js","services/game.service.js","components/rooms/current-room.jsx","components/rooms/new-room.jsx","services/map.service.js","components/rooms/rooms-router.jsx","services/web-socket.js","components/map/city-card.jsx","components/map/math-helpers.js","components/map/city-connector-offsets.js","components/map/wired-connection.jsx","components/map/map-preview.jsx","components/map/zoom.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","CookieService","key","value","expireDays","expirationDate","Date","now","msDay","document","cookie","toUTCString","split","map","val","find","ckey","pastDate","forEach","delete","initialState","isOnline","apiVersion","authToken","get","isAuthenticated","user","counter","rooms","game","GameRoomId","playerBoards","_usePlayerBoard","store","Id","state","p","pb","setState","filter","actions","setOnline","status","setApiVersion","addToCounter","setUserData","AuthToken","id","Name","email","displayName","emailVerified","photoURL","isAnonymous","uid","providerDat","name","set","clearUserData","setRooms","setUserJoin","setPlayerBoard","EntityType","Color","IsDone","Money","setUserLeave","setPlayerBoards","setPlayerColor","playerBoard","console","warn","setPlayerIsDone","useGlobal","globalHook","React","AuthRoute","children","rest","render","location","to","pathname","from","apiUrl","apiRequest","endpoint","a","fetch","response","ok","json","data","Promise","reject","then","version","webVersion","require","VersionHolder","useEffect","getApiVersion","className","Input","props","isFocused","this","label","helperText","icon","errorText","onChange","isEmpty","length","hasError","cx","type","event","target","onFocus","onBlur","title","Component","Login","useState","username","setUsername","password","setPassword","errorMessage","setErrorMessage","history","useHistory","useLocation","onClick","firebase","signInWithEmailAndPassword","debug","replace","catch","error","message","Register","createUserWithEmailAndPassword","log","StatusHolder","headers","method","body","JSON","stringify","gameRoomId","lastActivityTime","getStatus","push","encodeURIComponent","AnonRoute","RoomList","onRoomJoin","roomId","joinRoom","ref","on","snapshot","Object","values","room","UserCount","toggleReady","CurrentRoom","_roomId","useParams","decodeURIComponent","getGameStatus","PlayerBoards","currentRoom","r","onChangeColor","userId","changeColor","onKick","playerId","kickPlayer","boardsSorted","sortBy","allReady","every","b","board","style","color","isReady","onToggleReady","leaveRoom","disabled","NewRoom","mapList","setMapList","getMapList","maps","width","mapId","roomConfig","createRoom","RoomsIndex","path","useRouteMatch","exact","fixWsJson","startsWith","substring","indexOf","ws","globals","BroadcastReason","Users","wsOnEvent","parse","reducer","addEventListener","send","Type","removeEventListener","WebSocket","close","CitySlot","cost","CityCard","x","y","region","left","top","hidden","getDistance","cityConnectorOffsets","slotSize","col","row","WiredConnection","fromOffsets","cco","toOffsets","dists","fromPoint","toPoint","minBy","nearestConnection","nearestFrom","nearestTo","distance","middlePoint","getMiddlePoint","angle","Math","atan2","PI","wireOffset","connectionOffset","connectionSize","pathCostSvg","pathCostCopperSvg","pathCostSilverSvg","pathCostGoldishSvg","pathCostGoldSvg","getPathCostSvg","height","viewBox","viewTarget","transform","fill","xlinkHref","connectionFromSvg","connectionToSvg","pathCostSizePx","cy","opacity","modificator","patchXY","item","CoordX","CoordY","MapPreview","mapData","setMapData","getMap","window","startX","startY","gestureStartScale","scale","posX","posY","mapOverlay","querySelector","mapContent","requestAnimationFrame","overlayWidth","offsetWidth","overlayHeight","offsetHeight","getBoundingClientRect","contentWidth","contentHeight","clamp","min","max","isMoving","startMove","e","preventDefault","classList","add","TouchEvent","touch","touches","pageX","pageY","move","endMove","remove","ctrlKey","deltaY","deltaX","passive","initZoom","mapSize","xmlns","xmlnsXlink","patternContentUnits","preserveAspectRatio","wiresSvg","stdDeviation","dx","dy","floodColor","Connectors","conn","Cities","city","City1Key","City2Key","Cost","RegionKey","Boolean","hostname","match","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","global","connect","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.068622ee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wires-20.b1c5e4e0.svg\";","module.exports = __webpack_public_path__ + \"static/media/connection-from.e75d5b32.svg\";","module.exports = __webpack_public_path__ + \"static/media/connection-to.93da9075.svg\";","module.exports = __webpack_public_path__ + \"static/media/path-cost-copper-10.e168a73f.svg\";","module.exports = __webpack_public_path__ + \"static/media/path-cost-silver-20.ef391d38.svg\";","module.exports = __webpack_public_path__ + \"static/media/path-cost-goldish-25.eebca72f.svg\";","module.exports = __webpack_public_path__ + \"static/media/path-cost-gold.f70c738a.svg\";","export default class CookieService {\n  static msDay = 24 * 60 * 60 * 1000;\n\n  static set(key, value, expireDays = 1) {\n    const expirationDate = new Date(\n      Date.now() + expireDays * CookieService.msDay,\n    );\n\n    document.cookie = `${key}=${value};expires=${expirationDate.toUTCString()};path=/`;\n  }\n\n  static get(key) {\n    const cookies = document.cookie.split('; ').map(val => val.split('='));\n\n    const [, value] = cookies.find(([ckey, value]) => ckey === key) || [\n      null,\n      null,\n    ];\n\n    return value;\n  }\n\n  static delete(key) {\n    const pastDate = new Date(0);\n    document.cookie = `${key}=;expires=${pastDate.toUTCString()};path=/`;\n  }\n\n  static clear() {\n    const cookies = document.cookie.split('; ').map(val => val.split('='));\n\n    cookies.forEach(([key]) => CookieService.delete(key));\n  }\n}\n","import React from 'react';\nimport globalHook from 'use-global-hook';\n\nimport CookieService from './services/cookie.service';\n\nconst initialState = {\n  isOnline: false,\n  apiVersion: null,\n  //todo: get token from cookie?\n  authToken: CookieService.get('authToken'),\n  isAuthenticated: false,\n  user: null,\n  counter: 0,\n  rooms: [],\n  //game\n  game: {\n    GameRoomId: null,\n    playerBoards: [],\n  },\n};\n\nfunction _usePlayerBoard(store, { Id }) {\n  const playerBoard = store.state.game.playerBoards.find(p => p.Id === Id);\n\n  return [\n    playerBoard,\n    pb => {\n      store.setState({\n        game: {\n          ...store.state.game,\n          playerBoards: [\n            ...store.state.game.playerBoards.filter(p => p.Id !== Id),\n            pb,\n          ],\n        },\n      });\n    },\n  ];\n}\n\nconst actions = {\n  //common\n  setOnline(store, status = true) {\n    store.setState({ isOnline: status });\n  },\n  setApiVersion(store, apiVersion) {\n    store.setState({ apiVersion });\n  },\n  //debug\n  addToCounter(store, value) {\n    store.setState({\n      counter: store.state.counter + 1,\n    });\n  },\n  //user-data\n  setUserData(\n    store,\n    {\n      AuthToken: authToken,\n      Id: id,\n      Name: name,\n      GameRoomId,\n      //🔥\n      displayName,\n      email,\n      emailVerified,\n      photoURL,\n      isAnonymous,\n      uid,\n      providerDat,\n    },\n  ) {\n    store.setState({\n      authToken,\n      user: { id, name: email },\n      isAuthenticated: true,\n      game: {\n        ...store.state.game,\n        GameRoomId,\n      },\n    });\n\n    CookieService.set('authToken', authToken);\n  },\n  clearUserData(store) {\n    store.setState({\n      authToken: null,\n      user: null,\n      isAuthenticated: false,\n    });\n    CookieService.delete('authToken');\n  },\n  //rooms\n  setRooms(store, rooms) {\n    store.setState({\n      rooms,\n    });\n  },\n  setUserJoin(store, user) {\n    //{EntityType: \"User\", Id: \"u#88173017\", Name: \"kekster2000\"}\n    //lack of:\n    // {\n    //       Color: 4,\n    //       EntityType: 'PlayerBoard',\n    //       Id: 'u#88173017',\n    //       IsDone: false,\n    //       Money: 0,\n    //       Name: 'kekster2000',\n    //     }\n\n    const [, setPlayerBoard] = _usePlayerBoard(store, { Id: user.Id });\n\n    const newPlayerBoard = {\n      ...user,\n      //defaults that izya zajopilsya prislat'\n      EntityType: 'PlayerBoard',\n      Color: 0,\n      IsDone: true, // todo(vmyshko): this is shit, server remembers is done for left users\n      Money: 0,\n    };\n\n    setPlayerBoard(newPlayerBoard);\n  },\n  setUserLeave(store, { Id }) {\n    store.setState({\n      game: {\n        ...store.state.game,\n        playerBoards: [\n          ...store.state.game.playerBoards.filter(p => p.Id !== Id),\n        ],\n      },\n    });\n  },\n  //game\n  setPlayerBoards(store, playerBoards) {\n    store.setState({\n      game: {\n        ...store.state.game,\n        playerBoards,\n      },\n    });\n  },\n  setPlayerColor(store, { Id, Color }) {\n    const [playerBoard, setPlayerBoard] = _usePlayerBoard(store, { Id });\n\n    if (!playerBoard) return console.warn(`${Id} not found`);\n    playerBoard.Color = Color;\n\n    setPlayerBoard(playerBoard);\n  },\n  setPlayerIsDone(store, { Id, IsDone }) {\n    const [playerBoard, setPlayerBoard] = _usePlayerBoard(store, { Id });\n    if (!playerBoard) return console.warn(`${Id} not found`);\n\n    playerBoard.IsDone = IsDone;\n\n    setPlayerBoard(playerBoard);\n  },\n};\n\nexport const useGlobal = globalHook(React, initialState, actions);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport { useGlobal } from \"../../use-global\";\n\nexport function AuthRoute({ children, ...rest }) {\n  const [{ isAuthenticated }] = useGlobal();\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAuthenticated ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n","export const apiUrl = 'https://pg-api.azurewebsites.net/api';\nexport const wsUrl = 'wss://pg-api.azurewebsites.net/api';\n","import { apiUrl } from \"../config\";\n\nexport async function apiRequest(endpoint, ...rest) {\n  try {\n    const response = await fetch(`${apiUrl}/${endpoint}`, ...rest);\n\n    if (!response.ok) {\n      throw await response.json();\n    }\n\n    const json = await response.json();\n    return json.data;\n  } catch (error) {\n    console.warn(\"api error\", error);\n\n    return Promise.reject(error);\n  }\n}\n","import { apiRequest } from \"./api-request\";\n\nexport async function getApiVersion() {\n  return apiRequest(\"version\").then(data => data.version);\n}\n","import React, { useEffect } from 'react';\n\nimport { useGlobal } from '../use-global';\nimport { getApiVersion } from '../services/version.service';\nimport './version-holder.css';\n\nconst { version: webVersion } = require('../../package.json');\n\nexport default function VersionHolder() {\n  const [{ apiVersion }, { setApiVersion }] = useGlobal();\n\n  useEffect(() => {\n    getApiVersion().then(apiVersion => {\n      setApiVersion(apiVersion);\n    });\n  }, []);\n\n  return (\n    <div className=\"version-holder flex-column m-1 z-index-1\">\n      <span>web: {webVersion}</span>\n      <span>api: {apiVersion}</span>\n    </div>\n  );\n}\n","import React from \"react\";\nimport cx from \"classnames\";\n\nimport \"./input.css\";\n\nexport default class Input extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isFocused: false\n    };\n  }\n\n  render() {\n    const { label, value, helperText, icon, errorText, onChange } = this.props;\n    const { isFocused } = this.state;\n    const isEmpty = value.length === 0;\n    const hasError = !!errorText;\n\n    return (\n      <label\n        className={cx(\"input cursor-pointer\", {\n          \"is-focused\": isFocused,\n          \"is-empty\": isEmpty,\n          \"has-error\": hasError\n        })}\n      >\n        <div className=\"input-body flex-row justify-between\">\n          <div className=\"flex-column justify-center position-relative w-100 px-2\">\n            <div className=\"input-label\">{label}</div>\n\n            <input\n              className=\"input-value w-100\"\n              type=\"text\"\n              value={value}\n              onChange={event => onChange(event.target.value)}\n              onFocus={() => this.setState({ isFocused: true })}\n              onBlur={() => this.setState({ isFocused: false })}\n            />\n          </div>\n          {icon && !hasError && (\n            <i className=\"input-icon material-icons flex-row align-center mx-2\">\n              {icon}\n            </i>\n          )}\n          {hasError && (\n            <i className=\"error-icon material-icons flex-row align-center mx-2\">\n              error\n            </i>\n          )}\n        </div>\n        <hr className=\"m-0\" />\n        <div className=\"input-footer flex-row ml-2\">\n          {helperText && !hasError && (\n            <span className=\"helper-text text-ellipsis\" title={helperText}>\n              {helperText}\n            </span>\n          )}\n          {hasError && (\n            <span className=\"error-text text-ellipsis\" title={errorText}>\n              {errorText}\n            </span>\n          )}\n        </div>\n      </label>\n    );\n  }\n}\n","import React, { useState } from 'react';\nimport { useHistory, useLocation, Link } from 'react-router-dom';\nimport * as firebase from 'firebase/app';\n\nimport Input from '../common/input';\nimport { logIn } from '../../services/auth.service';\nimport { useGlobal } from '../../use-global';\n\nexport default function Login() {\n  const [{}, { setUserData }] = useGlobal();\n  const [username, setUsername] = useState('kekster2000');\n  const [password, setPassword] = useState('qwerty123');\n  const [errorMessage, setErrorMessage] = useState(null);\n  const history = useHistory();\n  const location = useLocation();\n\n  const { from } = location.state || { from: { pathname: '/' } };\n\n  const onLogIn = () => {\n    //🔥\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(username, password)\n      .then(data => {\n        console.debug('🔥login ok', data);\n        setUserData(data.user);\n        history.replace(from);\n      })\n      .catch(function(error) {\n        console.warn('🔥login failed', error);\n        setErrorMessage(error.message);\n      });\n\n    return;\n    logIn({ username, password })\n      .then(data => {\n        setUserData(data);\n        console.debug('login ok', data);\n        history.replace(from);\n      })\n      .catch(error => {\n        console.warn('login failed', error);\n        setErrorMessage(error.message);\n      });\n  };\n\n  return (\n    <div className=\"form flex-column\">\n      <Input\n        label=\"username\"\n        value={username}\n        helperText=\"username should be strong enough\"\n        errorText={errorMessage}\n        icon=\"face\"\n        onChange={value => setUsername(value)}\n      />\n      <Input\n        label=\"password\"\n        value={password}\n        helperText=\"keep password simple\"\n        icon=\"lock\"\n        onChange={value => setPassword(value)}\n      />\n\n      <button\n        className=\"button flex-row align-center justify-center\"\n        onClick={onLogIn}\n      >\n        <span>log in</span>\n        <i className=\"material-icons\">arrow_forward</i>\n      </button>\n      <span className=\"p-2 flex-row justify-between\">\n        Don't have an account?\n        <Link to=\"/register\">register</Link>\n      </span>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useHistory, useLocation, Link } from 'react-router-dom';\nimport * as firebase from 'firebase/app';\n\nimport Input from '../common/input';\nimport { register } from '../../services/auth.service';\nimport { useGlobal } from '../../use-global';\n\nexport default function Register() {\n  const [{}, { setUserData }] = useGlobal();\n  const [username, setUsername] = useState('jailbot007');\n  const [password, setPassword] = useState('kek123');\n  const [errorMessage, setErrorMessage] = useState(null);\n  const history = useHistory();\n  const location = useLocation();\n\n  const { from } = location.state || { from: { pathname: '/' } };\n\n  const onRegister = () => {\n    //🔥\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(username, password)\n      .then(data => {\n        console.log('🔥auth', data.user);\n        setUserData(data);\n        history.replace(from);\n      })\n      .catch(function(error) {\n        console.warn('🔥register failed:', error);\n        setErrorMessage(error.message);\n      });\n\n    return;\n    register({ username, password })\n      .then(data => {\n        setUserData(data);\n        console.debug('register ok:', data);\n        history.replace(from);\n      })\n      .catch(error => {\n        console.warn('register failed:', error.message);\n        setErrorMessage(error.message);\n      });\n  };\n\n  return (\n    <div className=\"form flex-column\">\n      <Input\n        label=\"username\"\n        value={username}\n        helperText=\"username should be strong enough\"\n        errorText={errorMessage}\n        icon=\"face\"\n        onChange={value => setUsername(value)}\n      />\n      <Input\n        label=\"password\"\n        value={password}\n        helperText=\"keep password simple\"\n        icon=\"lock\"\n        onChange={value => setPassword(value)}\n      />\n\n      <button\n        className=\"button flex-row align-center justify-center\"\n        onClick={onRegister}\n      >\n        <span>register</span>\n        <i className=\"material-icons\">add_box</i>\n      </button>\n      <span className=\"p-2 flex-row justify-between\">\n        Already have an account?\n        <Link to=\"/login\">log in</Link>\n      </span>\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { getStatus } from '../../services/auth.service';\nimport { useGlobal } from '../../use-global';\n\nimport './status-holder.css';\n\nexport default function StatusHolder() {\n  const history = useHistory();\n  const [\n    { authToken, isAuthenticated, user },\n    { setUserData, clearUserData },\n  ] = useGlobal();\n\n  useEffect(() => {\n    authToken &&\n      !isAuthenticated &&\n      getStatus(authToken)\n        .then(data => {\n          setUserData(data);\n\n          //if user in room - redirect\n          if (data.GameRoomId) {\n            history.push(`rooms/${encodeURIComponent(data.GameRoomId)}`);\n          }\n        })\n        .catch(clearUserData);\n  }, []);\n\n  return (\n    <div className=\"status-holder flex-column align-end p-1 z-index-1\">\n      {isAuthenticated ? (\n        <div className=\"flex-row align-center\">\n          <div className=\"flex-row align-center mx-2\">\n            <i className=\"material-icons px-1\">face</i>\n            <span>{user.name}</span>\n          </div>\n\n          <button\n            className=\"button flex-row align-center px-3\"\n            onClick={clearUserData}\n          >\n            <span> log out</span>\n            <i className=\"material-icons\">exit_to_app</i>\n          </button>\n        </div>\n      ) : (\n        <div>unauthorized</div>\n      )}\n    </div>\n  );\n}\n","import { apiRequest } from './api-request';\n\nexport function logIn({ username, password }) {\n  return apiRequest('auth/login', {\n    // todo(vmyshko): make common\n    headers: {\n      'Content-type': 'application/json',\n    },\n    method: 'POST',\n    body: JSON.stringify({ username, password }),\n  });\n}\n\nexport function register({ username, password }) {\n  return apiRequest('auth/register', {\n    // todo(vmyshko): make common\n    headers: {\n      'Content-type': 'application/json',\n    },\n    method: 'POST',\n    body: JSON.stringify({ username, password }),\n  });\n}\n\nexport function getStatus(authToken) {\n  return (\n    apiRequest('auth/status', {\n      // todo(vmyshko): make common\n      headers: {\n        'Content-type': 'application/json',\n        authToken,\n      },\n      method: 'POST',\n      body: JSON.stringify({\n        gameRoomId: true,\n        lastActivityTime: true,\n        isOnline: true,\n        authToken: true,\n        id: true,\n        name: true,\n      }),\n    })\n      // todo(vmyshko): izya to fix this data.data\n      .then(data => data.data)\n  );\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport { useGlobal } from \"../../use-global\";\n\nexport function AnonRoute({ children, ...rest }) {\n  const [{ isAuthenticated }] = useGlobal();\n\n  return (\n    <Route\n      {...rest}\n      render={() => (!isAuthenticated ? children : <Redirect to=\"/\" />)}\n    />\n  );\n}\n","import React, { useEffect } from 'react';\nimport * as firebase from 'firebase/app';\n\nimport { useGlobal } from '../../use-global';\nimport { getRoomList, joinRoom } from '../../services/room.service';\nimport { useHistory } from 'react-router-dom';\n\nimport './rooms.css';\n\nexport default function RoomList() {\n  const history = useHistory();\n  const [{ authToken, rooms }, { setRooms }] = useGlobal();\n\n  const onRoomCreate = () => {\n    history.push(`/rooms/new`);\n  };\n\n  const onRoomJoin = roomId => {\n    joinRoom(authToken, roomId).then(data => {\n      // todo(vmyshko): get rid of # in game object ids (izya)\n      history.push(`/rooms/${encodeURIComponent(roomId)}`);\n    });\n  };\n\n  useEffect(() => {\n    //🔥\n    firebase\n      .database()\n      .ref('/rooms')\n      .on('value', snapshot => {\n        console.log('🔥', snapshot.val());\n\n        const rooms = Object.values(snapshot.val());\n\n        setRooms(rooms); //sets state locally\n      });\n\n    return;\n    getRoomList(authToken).then(rooms => {\n      setRooms(rooms);\n    });\n  }, []);\n\n  return (\n    <div className=\"rooms form flex-column p-2\">\n      <h1 className=\"mx-2\">rooms</h1>\n      <ul className=\"room-list list flex-column p-1 m-2\">\n        {rooms\n          //[...rooms, ...rooms, ...rooms]\n          //.filter(r => !r.IsInGame)\n          .map(room => (\n            <li\n              className=\"list-item flex-row align-center p-2 m-1\"\n              key={room.Id}\n            >\n              <span className=\"room-name fill-left\">{room.Name}</span>\n\n              <div className=\"flex-row align-center\">\n                <i className=\"material-icons\">group</i>\n                <span className=\"px-1\">{room.UserCount}</span>\n\n                <button className=\"button\" onClick={() => onRoomJoin(room.Id)}>\n                  join\n                </button>\n              </div>\n            </li>\n          ))}\n      </ul>\n\n      <button\n        className=\"button flex-row align-center justify-center m-2\"\n        onClick={onRoomCreate}\n      >\n        <span>create new room</span>\n        <i className=\"material-icons\">add_box</i>\n      </button>\n    </div>\n  );\n}\n","import { apiRequest } from './api-request';\n\nexport function getRoomList(authToken) {\n  return apiRequest('room/list', {\n    // todo(vmyshko): make common\n    headers: {\n      'Content-type': 'application/json',\n      authToken,\n    },\n    method: 'GET',\n    //body: JSON.stringify({ username, password })\n  });\n}\n\nexport function joinRoom(authToken, roomId) {\n  return apiRequest('room/join', {\n    // todo(vmyshko): make common\n    headers: {\n      'Content-type': 'application/json',\n      authToken,\n    },\n    method: 'POST',\n    body: JSON.stringify({ roomId }),\n  });\n}\n\nexport function leaveRoom(authToken) {\n  return apiRequest('room/leave', {\n    // todo(vmyshko): make common\n    headers: {\n      'Content-type': 'application/json',\n      authToken,\n    },\n    method: 'POST',\n    //body: JSON.stringify({ roomId })\n  });\n}\n\nexport function kickPlayer(authToken, playerId) {\n  // todo(vmyshko): izya pes, we need common approach here - just body param, not url\n  return apiRequest(`room/kick?username=${playerId}`, {\n    // todo(vmyshko): make common\n    headers: {\n      'Content-type': 'application/json',\n      authToken,\n    },\n    method: 'POST',\n    body: JSON.stringify({ username: playerId }),\n  });\n}\nexport function createRoom(authToken, roomConfig) {\n  return apiRequest('room/create', {\n    // todo(vmyshko): make common\n    headers: {\n      'Content-type': 'application/json',\n      authToken,\n    },\n    method: 'POST',\n    body: JSON.stringify({\n      //name: 'new room',\n      // setReadyMark: true,\n      // gameRounds: 0,\n    }),\n  });\n}\n","import { apiRequest } from \"./api-request\";\n\nexport function getGameStatus(authToken) {\n  return apiRequest(\"game/status\", {\n    // todo(vmyshko): make common\n    headers: {\n      \"Content-type\": \"application/json\",\n      authToken\n    },\n    method: \"GET\"\n    //body: JSON.stringify({ roomId })\n  });\n}\n\nexport function changeColor(authToken, userId) {\n  return apiRequest(\"game/changeColor\", {\n    // todo(vmyshko): make common\n    headers: {\n      \"Content-type\": \"application/json\",\n      authToken\n    },\n    method: \"POST\",\n    body: JSON.stringify({ userId })\n  });\n}\n\nexport function toggleReady(authToken, state = true) {\n  return apiRequest(\"game/toggleReady\", {\n    // todo(vmyshko): make common\n    headers: {\n      \"Content-type\": \"application/json\",\n      authToken\n    },\n    method: \"POST\",\n    body: JSON.stringify({ state })\n  });\n}\n","import React, { useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { sortBy } from 'lodash';\n\nimport {\n  getGameStatus,\n  changeColor,\n  toggleReady,\n} from '../../services/game.service';\nimport { useGlobal } from '../../use-global';\nimport { leaveRoom, kickPlayer } from '../../services/room.service';\n\nexport default function CurrentRoom() {\n  const { _roomId } = useParams();\n  const history = useHistory();\n  const roomId = decodeURIComponent(_roomId);\n\n  const [{ authToken, rooms, game }, { setPlayerBoards }] = useGlobal();\n  const { playerBoards } = game;\n\n  useEffect(() => {\n    getGameStatus(authToken).then(data => {\n      setPlayerBoards(data.PlayerBoards);\n    });\n  }, []);\n\n  const currentRoom = rooms.find(r => r.Id === roomId);\n\n  if (!currentRoom) return null;\n\n  const onLeave = () => {\n    leaveRoom(authToken).then(() => {\n      history.push('/rooms');\n    });\n  };\n\n  const onChangeColor = userId => {\n    //change for yourself or for another if admin?\n    //seems it always change mine, no matter what userid was sent\n    changeColor(authToken, userId).then(() => {\n      //refresh\n    });\n  };\n  const onToggleReady = (userId, isReady = true) => {\n    //todo: just check for current\n    //todo:save current state and toggle on/off\n    toggleReady(authToken, isReady).then(() => {\n      //refresh?\n    });\n  };\n  const onGameStart = () => {};\n  const onAddBot = () => {};\n  const onKick = playerId => {\n    kickPlayer(authToken, playerId).then(() => {\n      //refresh?\n    });\n  };\n\n  const boardsSorted = sortBy(playerBoards, 'Id');\n\n  const allReady = boardsSorted.every(b => b.IsDone);\n\n  return (\n    <div className=\"form flex-column p-2\">\n      <h1 className=\"flex-row mx-2\">\n        <span className=\"fill-left\">{currentRoom.Name}</span>\n\n        <div className=\"flex-row align-center\">\n          <i className=\"material-icons\">group</i>\n          <span className=\"px-1\">{boardsSorted.length}</span>\n        </div>\n      </h1>\n\n      <ul className=\"player-list list flex-column p-1 m-2\">\n        {boardsSorted.map(board => (\n          <li\n            className=\"list-item flex-row align-center p-2 m-1\"\n            key={board.Id}\n          >\n            <div className=\"player-name flex-row fill-left align-center\">\n              <i\n                className={`city-icon color-${board.Color} cursor-pointer`}\n                onClick={() => onChangeColor(board.Id)}\n              />\n              <span className=\"px-2\">{board.Name}</span>\n            </div>\n\n            <i\n              className=\"material-icons cursor-pointer mx-2\"\n              onClick={() => onKick(board.Name)} // todo(vmyshko): change to id, after api update\n            >\n              delete\n            </i>\n            <i\n              className=\"material-icons cursor-pointer mx-1\"\n              style={{\n                color: board.IsDone ? 'gold' : 'gray',\n              }}\n              onClick={() => onToggleReady(board.Id, !board.IsDone)}\n            >\n              {board.IsDone ? 'thumb_up' : 'thumb_down'}\n            </i>\n          </li>\n        ))}\n      </ul>\n      <div className=\"flex-row align-center\">\n        <button className=\"button mx-1\" onClick={onLeave}>\n          leave\n        </button>\n        <div className=\"fill-left\"></div>\n        <button className=\"button mx-1\" onClick={onAddBot}>\n          add bot\n        </button>\n        <button\n          className={'button mx-1'}\n          disabled={!allReady}\n          onClick={onGameStart}\n        >\n          start game\n        </button>\n      </div>\n    </div>\n  );\n}\n\n// PlayerBoards: [\n//   {\n//     EntityType: \"PlayerBoard\",\n//     Id: \"u#890a5bf3\",\n//     Name: \"Max\",\n//     Color: 0,\n//     Money: 0,\n//     IsDone: false\n//   },\n//   {\n//     EntityType: \"PlayerBoard\",\n//     Id: \"u#88173017\",\n//     Name: \"kekster2000\",\n//     Color: 7,\n//     Money: 0,\n//     IsDone: false\n//   }\n// ];\n","import React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { createRoom } from '../../services/room.service';\nimport { getMapList } from '../../services/map.service';\nimport { useGlobal } from '../../use-global';\n\nexport default function NewRoom() {\n  const [mapList, setMapList] = useState([]);\n  const history = useHistory();\n\n  const [{ authToken }, {}] = useGlobal();\n\n  useEffect(() => {\n    getMapList().then(maps => {\n      setMapList(maps);\n    });\n  }, []);\n\n  const onCreateRoom = () => {\n    createRoom(authToken).then(() => {\n      //navigate?\n    });\n  };\n\n  const onPreviewMap = mapId => {\n    history.push(`/maps/${mapId}`);\n  };\n\n  return (\n    <div className=\"form flex-column p-2\">\n      <h1 className=\"flex-row mx-2\">\n        <span className=\"fill-left\">select map</span>\n      </h1>\n\n      <ul className=\"map-list list flex-column p-1 m-2\" style={{ width: 320 }}>\n        {mapList.map(map => (\n          <li className=\"list-item flex-row align-center p-2 m-1\" key={map}>\n            <span className=\"fill-left\">{map}</span>\n            <button className=\"button\" onClick={() => onPreviewMap(map)}>\n              preview\n            </button>\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"flex-row align-center\">\n        <Link to=\"/rooms\">\n          <button className=\"button mx-1\">quit</button>\n        </Link>\n        <div className=\"fill-left\"></div>\n\n        <button className=\"button mx-1\" onClick={onCreateRoom}>\n          create room\n        </button>\n      </div>\n    </div>\n  );\n}\n","import { apiRequest } from './api-request';\n\nexport function getMapList(authToken) {\n  return apiRequest('maps/list', {\n    // todo(vmyshko): make common\n    headers: {\n      'Content-type': 'application/json',\n      authToken,\n    },\n    method: 'GET',\n    //body: JSON.stringify({ username, password })\n  });\n}\n\nexport function getMap(authToken, mapId) {\n  return apiRequest('maps/map', {\n    // todo(vmyshko): make common\n    headers: {\n      'Content-type': 'application/json',\n      authToken,\n    },\n    method: 'POST',\n    body: JSON.stringify({ mapId }),\n  });\n}\n","import React from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\n\nimport RoomsList from './rooms-list';\nimport CurrentRoom from './current-room';\nimport NewRoom from './new-room';\n\nexport default function RoomsIndex() {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={path}>\n        <RoomsList />\n      </Route>\n      <Route path={`${path}/new`}>\n        <NewRoom />\n      </Route>\n      <Route path={`${path}/:_roomId`}>\n        <CurrentRoom />\n      </Route>\n    </Switch>\n  );\n}\n","import { wsUrl } from '../config';\n\n// todo(vmyshko): temporary solution, since Izya sends dirty json-like string with time prefix\n\nfunction fixWsJson(message = '') {\n  if (message.startsWith('{')) {\n    return message;\n  }\n\n  return message.substring(message.indexOf('{'));\n}\n\nclass PgWebSocket {\n  ws = null;\n\n  reducer(message) {\n    const [\n      {},\n      { setPlayerColor, setPlayerIsDone, setUserJoin, setUserLeave },\n    ] = this.globals;\n\n    switch (message.BroadcastReason) {\n      case '/api/game/changecolor': {\n        const [board] = message.PlayerBoards;\n        setPlayerColor(board);\n        break;\n      }\n      case '/api/game/toggleready': {\n        const [board] = message.PlayerBoards;\n        setPlayerIsDone(board);\n        break;\n      }\n      case '/api/room/join': {\n        // todo(vmyshko): this is izya's server shit, need to get new board here\n        if (!message.Users) return;\n\n        const [user] = message.Users;\n        setUserJoin(user);\n        break;\n      }\n      case '/api/room/kick':\n      case '/api/room/leave': {\n        // todo(vmyshko): same reason same entity - different data. fuckin izya...\n        if (!message.Users) return;\n\n        const [user] = message.Users;\n        setUserLeave(user);\n        break;\n      }\n      default: {\n        console.warn('unhandled reason', message.BroadcastReason, message);\n      }\n    }\n  }\n\n  async connect(globals) {\n    this.globals = globals;\n    const [{ authToken }, { setOnline }] = globals;\n\n    const wsMarker = '🌐ws:';\n    const wsOnEvent = event => {\n      const message = JSON.parse(fixWsJson(event.data) || null);\n      console.debug(wsMarker, event.type, message);\n      switch (event.type) {\n        case 'message': {\n          this.reducer(message);\n          break;\n        }\n        case 'open': {\n          this.ws.addEventListener('close', wsOnEvent);\n          this.ws.addEventListener('message', wsOnEvent);\n\n          setOnline(true);\n          this.send({\n            AuthToken: authToken,\n            Type: 'AUTHSTATUS',\n          });\n          break;\n        }\n        case 'close': {\n          this.ws.removeEventListener('open', wsOnEvent);\n          this.ws.removeEventListener('message', wsOnEvent);\n          setOnline(false);\n          break;\n        }\n        default: {\n        }\n      }\n    };\n\n    this.ws = new WebSocket(wsUrl);\n\n    this.ws.addEventListener('open', wsOnEvent);\n  }\n\n  send(data) {\n    this.ws.send(JSON.stringify(data));\n  }\n\n  disconnect() {\n    this.ws.close();\n  }\n}\n\nexport const ws = new PgWebSocket();\n","import React from 'react';\n\nimport './city-card.css';\n\nfunction CitySlot(props) {\n  const { cost } = props;\n  return <div className=\"city-slot m-1 text-stroke\">{cost}</div>;\n}\n\nexport default function CityCard(props) {\n  const { x, y, name, region } = props;\n\n  return (\n    <>\n      <div\n        className=\"overlay flex-row justify-center align-center\"\n        style={{\n          left: x,\n          top: y,\n        }}\n      >\n        <div className=\"city-card\">\n          <div className=\"city-rows flex-column p-1\">\n            <div className=\"city-slots flex-row\">\n              {[10, 15, 20].map(cost => (\n                <CitySlot key={cost} cost={cost} />\n              ))}\n            </div>\n            <div className=\"position-relative\">\n              <div className=\"overlay w-100 h-100 flex-row align-center justify-center\">\n                <div className={`city-name region-${region} px-1 text-stroke`}>\n                  {name}\n                </div>\n              </div>\n            </div>\n            <div\n              className=\"city-slots flex-row\"\n              hidden\n              //hidden={Math.random() * 10 > 5}\n            >\n              {[10, 15, 20].map(cost => (\n                <CitySlot key={cost} cost={cost} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/**\n * returns distance between two points\n * @param {{x:number, y:number}} from\n * @param {{x:number, y:number}} to\n */\nexport function getDistance(from, to) {\n  return ((from.x - to.x) ** 2 + (from.y - to.y) ** 2) ** 0.5;\n}\n\n/**\n * returns point between two other points\n * @param {{x:number, y:number}} from\n * @param {{x:number, y:number}} to\n */\nexport function getMiddlePoint(from, to) {\n  return { x: from.x + (to.x - from.x) / 2, y: from.y + (to.y - from.y) / 2 };\n}\n","import { minBy } from 'lodash';\nimport { getDistance } from './math-helpers';\n\n//init\nconst cityBlockSize = { width: 190, height: 150 }; //80\nconst cols = 3;\nconst rows = 1;\n\nconst cityConnectorOffsets = [];\nconst slotSize = {\n  width: cityBlockSize.width / cols,\n  height: cityBlockSize.height / rows,\n};\n\nfor (let col = 0; col < cols; col++) {\n  for (let row = 0; row < rows; row++) {\n    cityConnectorOffsets.push({\n      x: slotSize.width * (col - (cols - 1) / 2),\n      y: slotSize.height * (row - (rows - 1) / 2),\n    });\n  }\n}\n\nfunction nearestConnection(from, to) {\n  const fromOffsets = cityConnectorOffsets.map(cco => ({\n    x: from.x + cco.x,\n    y: from.y + cco.y,\n  }));\n\n  const toOffsets = cityConnectorOffsets.map(cco => ({\n    x: to.x + cco.x,\n    y: to.y + cco.y,\n  }));\n\n  //get all distances between\n  const dists = [];\n\n  fromOffsets.forEach(fromPoint => {\n    toOffsets.forEach(toPoint => {\n      dists.push([fromPoint, toPoint, getDistance(fromPoint, toPoint)]);\n    });\n  });\n\n  const [nearestFrom, nearestTo, dist] = minBy(dists, ([, , dist]) => dist);\n\n  return [nearestFrom, nearestTo, dist];\n}\n\nexport { nearestConnection };\n","import React from 'react';\nimport connectionFromSvg from '../../assets/connection-from.svg';\nimport connectionToSvg from '../../assets/connection-to.svg';\nimport { nearestConnection } from './city-connector-offsets';\nimport { getMiddlePoint } from './math-helpers';\n\nimport pathCostCopperSvg from '../../assets/path-cost-copper-10.svg';\nimport pathCostSilverSvg from '../../assets/path-cost-silver-20.svg';\nimport pathCostGoldishSvg from '../../assets/path-cost-goldish-25.svg';\nimport pathCostGoldSvg from '../../assets/path-cost-gold.svg';\n\nfunction getPathCostSvg(cost) {\n  if (cost < 10) return pathCostCopperSvg;\n  if (cost < 20) return pathCostSilverSvg;\n  if (cost < 25) return pathCostGoldishSvg;\n  return pathCostGoldSvg;\n}\n\nexport default function WiredConnection(props) {\n  const { from, to, cost } = props;\n  const [nearestFrom, nearestTo, distance] = nearestConnection(from, to);\n\n  const middlePoint = getMiddlePoint(nearestFrom, nearestTo);\n\n  const angle =\n    (Math.atan2(nearestTo.y - nearestFrom.y, nearestTo.x - nearestFrom.x) *\n      180) /\n    Math.PI;\n\n  const wireOffset = { x: 0, y: -10 };\n  const connectionOffset = { x: -60, y: -16 };\n  const connectionSize = { width: 40, height: 30 };\n\n  const pathCostSizePx = 45;\n\n  const pathCostSvg = getPathCostSvg(cost);\n\n  return (\n    <g className=\"filter-shadow-connection\">\n      <rect\n        height=\"20\"\n        width={distance}\n        x={nearestFrom.x}\n        y={nearestFrom.y}\n        viewBox=\"0 0 100 100\"\n        viewTarget=\"0 0 100 100\"\n        transform={`translate(${wireOffset.x} ${\n          wireOffset.y\n        }) rotate(${angle} ${nearestFrom.x - wireOffset.x} ${nearestFrom.y -\n          wireOffset.y})`}\n        style={{\n          fill: 'url(#wires-pattern)',\n        }}\n      />\n\n      {/* FROM */}\n      <image\n        x={nearestFrom.x}\n        y={nearestFrom.y}\n        width={connectionSize.width}\n        height={connectionSize.height}\n        xlinkHref={connectionFromSvg}\n        transform={`translate(${-connectionOffset.x / 2.5} ${\n          connectionOffset.y\n        }) rotate(${angle} ${nearestFrom.x +\n          connectionOffset.x / 2.5} ${nearestFrom.y - connectionOffset.y})`}\n      />\n      {/* TO */}\n      <image\n        x={nearestTo.x}\n        y={nearestTo.y}\n        width={connectionSize.width}\n        height={connectionSize.height}\n        xlinkHref={connectionToSvg}\n        transform={`translate(${connectionOffset.x} ${\n          connectionOffset.y\n        }) rotate(${angle} ${nearestTo.x - connectionOffset.x} ${nearestTo.y -\n          connectionOffset.y})`}\n      />\n\n      {/* cost */}\n      {/* <circle\n        cx={middlePoint.x}\n        cy={middlePoint.y}\n        r=\"15\"\n        style={{ fill: 'greenyellow', opacity: 0.7 }}\n      /> */}\n\n      {/* // todo(vmyshko): move to separate layer */}\n      <image\n        x={middlePoint.x - pathCostSizePx / 2}\n        y={middlePoint.y - pathCostSizePx / 2}\n        width={pathCostSizePx}\n        height={pathCostSizePx}\n        xlinkHref={pathCostSvg}\n      />\n      <foreignObject\n        x={middlePoint.x - pathCostSizePx / 2}\n        y={middlePoint.y - pathCostSizePx / 2}\n        width={pathCostSizePx}\n        height={pathCostSizePx}\n        className=\"filter-shadow-text\"\n      >\n        <div className=\"flex-row align-center justify-center h-100\">\n          <span className=\"connection-cost text-stroke\">{cost}</span>\n        </div>\n      </foreignObject>\n\n      {/* <line\n          x1={nearestFrom.x}\n          y1={nearestFrom.y}\n          x2={nearestTo.x}\n          y2={nearestTo.y}\n          stroke=\"lime\"\n          fill=\"url(#wires-pattern)\"\n          strokeWidth=\"3\"\n        /> */}\n\n      {/* FROM */}\n      <circle\n        cx={nearestFrom.x}\n        cy={nearestFrom.y}\n        r=\"15\"\n        style={{ fill: 'greenyellow', opacity: 0.7 }}\n      />\n      {/* TO */}\n      <circle\n        cx={nearestTo.x}\n        cy={nearestTo.y}\n        r=\"15\"\n        style={{ fill: 'red', opacity: 0.7 }}\n      />\n    </g>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { useGlobal } from '../../use-global';\nimport { getMap } from '../../services/map.service';\nimport CityCard from './city-card';\nimport wiresSvg from '../../assets/wires-20.svg';\nimport WiredConnection from './wired-connection';\nimport initZoom from './zoom';\n\nimport './map.css';\n\n// todo(vmyshko): force izya to update all namings to lowecase etc.\nconst modificator = { x: 2, y: 3 };\nfunction patchXY(item) {\n  const { CoordX: x, CoordY: y } = item;\n\n  return { ...item, x: x * modificator.x, y: y * modificator.y };\n}\n\nexport default function MapPreview() {\n  const { mapId } = useParams();\n  const [{ authToken }, {}] = useGlobal();\n\n  const [mapData, setMapData] = useState(null);\n\n  useEffect(() => {\n    getMap(authToken, mapId).then(mapData => {\n      console.log('🗾', mapData);\n      window.mapData = mapData;\n      setMapData(mapData);\n\n      initZoom();\n    });\n  }, []);\n\n  if (!mapData) return <div>map preview here</div>;\n\n  const mapSize = {\n    width: 1650 * modificator.x,\n    height: 950 * modificator.y,\n  };\n\n  return (\n    <div>\n      <h1>map</h1>\n      cities\n      <div className=\"map-overlay\">\n        <div className=\"map-content\" style={mapSize}>\n          <svg\n            className=\"map-svg w-100 h-100\"\n            version=\"1.1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n          >\n            <defs>\n              <pattern\n                id=\"wires-pattern\"\n                height=\"100%\"\n                width=\"100%\"\n                viewBox=\"0 0 20 20\"\n                // patternUnits=\"userSpaceOnUse\"\n                patternContentUnits=\"objectBoundingBox\"\n                preserveAspectRatio=\"none\"\n                // preserveAspectRatio=\"xMidYMid slice\"\n              >\n                <image\n                  width=\"20\"\n                  height=\"20\"\n                  preserveAspectRatio=\"xMidYMid slice\"\n                  xlinkHref={wiresSvg}\n                />\n              </pattern>\n\n              <filter id=\"filter-shadow-connection\">\n                <feDropShadow\n                  stdDeviation=\"0 0\"\n                  dx=\"2\"\n                  dy=\"2\"\n                  floodColor=\"#00000040\"\n                />\n              </filter>\n              <filter id=\"filter-shadow-text\">\n                <feDropShadow\n                  stdDeviation=\"0 0\"\n                  dx=\"1\"\n                  dy=\"1\"\n                  floodColor=\"#000000cc\"\n                />\n              </filter>\n            </defs>\n\n            {/* <circle cx=\"0\" cy=\"0\" r=\"20\" style={{ fill: 'black' }} /> */}\n\n            {mapData.Connectors.map(conn => {\n              const from = mapData.Cities.find(\n                city => city.Id === conn.City1Key,\n              );\n              const to = mapData.Cities.find(city => city.Id === conn.City2Key);\n\n              return (\n                <WiredConnection\n                  key={conn.Id}\n                  from={patchXY(from)}\n                  to={patchXY(to)}\n                  cost={conn.Cost}\n                />\n              );\n            })}\n            {/* <WiredConnection from={seattle} to={billings} cost={1} />\n          <WiredConnection from={billings} to={sanFran} cost={9} />\n          <WiredConnection from={sanFran} to={seattle} cost={20} /> */}\n          </svg>\n\n          {mapData.Cities.map(city => {\n            return (\n              <CityCard\n                key={city.Name}\n                x={patchXY(city).x}\n                y={patchXY(city).y}\n                name={city.Name}\n                region={city.RegionKey}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { clamp } from 'lodash';\n\n// https://multi-touch-trackpad-gesture.stackblitz.io/\n\nconst MIN_SCALE = 0.2;\nconst MAX_SCALE = 1.5;\n\nexport default function initZoom() {\n  let gestureStartScale = null;\n  let scale = 1;\n  let posX = 0;\n  let posY = 0;\n  let startX;\n  let startY;\n\n  const mapOverlay = document.querySelector('.map-overlay');\n  const mapContent = document.querySelector('.map-content');\n\n  const render = () => {\n    window.requestAnimationFrame(() => {\n      const {\n        offsetWidth: overlayWidth,\n        offsetHeight: overlayHeight,\n      } = mapOverlay;\n      const {\n        width: contentWidth,\n        height: contentHeight,\n      } = mapContent.getBoundingClientRect();\n\n      posX = clamp(\n        posX,\n        Math.min(0, overlayWidth - contentWidth),\n        Math.max(0, overlayWidth - contentWidth),\n      );\n\n      posY = clamp(\n        posY,\n        Math.min(0, overlayHeight - contentHeight),\n        Math.max(0, overlayHeight - contentHeight),\n      );\n      const transform = `translate3D(${posX}px, ${posY}px, 0px) scale(${scale})`;\n\n      // console.log(transform);\n      mapContent.style.transform = transform;\n\n      // const statusHolder = document.querySelector('.status-holder');\n      // statusHolder.innerHTML = `x:${posX}, y:${posY}, <br/>\n      // scale:${scale.toFixed(2)}<br/>\n      // overlay:${overlayWidth.toFixed(2)},${overlayHeight.toFixed(2)}<br/>\n      // content:${contentWidth.toFixed(2)},${contentHeight.toFixed(2)}<br/>\n      // `;\n    });\n  };\n\n  // todo(vmyshko): use this as common endpoint for any type of events?\n  function zoom(e) {\n    e.preventDefault();\n\n    if (e.ctrlKey) {\n      scale -= e.deltaY * 0.01;\n      // console.log(e.deltaY);\n\n      scale = Math.max(MIN_SCALE, scale);\n      scale = Math.min(MAX_SCALE, scale);\n    } else {\n      posX -= e.deltaX * 2;\n      posY -= e.deltaY * 2;\n    }\n\n    render();\n  }\n\n  let isMoving = false;\n\n  function startMove(e) {\n    e.preventDefault();\n    isMoving = true;\n    document.body.classList.add('cursor-move');\n\n    if (e instanceof TouchEvent) {\n      const [touch] = e.touches;\n\n      startX = touch.pageX - posX;\n      startY = touch.pageY - posY;\n      // console.log('start', startX, startY);\n    } else {\n      //mouse\n\n      startX = e.pageX - posX;\n      startY = e.pageY - posY;\n    }\n\n    gestureStartScale = scale;\n  }\n\n  function move(e) {\n    e.preventDefault();\n\n    if (!isMoving) return;\n\n    if (e instanceof TouchEvent) {\n      const [touch] = e.touches;\n\n      // todo(vmyshko): if 2 touches - get zoom gesture?\n      console.log(e.touches);\n\n      scale = gestureStartScale * (touch.scale || 1);\n\n      posX = touch.pageX - startX;\n      posY = touch.pageY - startY;\n      // console.log('move', posX, posY);\n    } else {\n      //MouseEvent\n      scale = gestureStartScale * (e.scale || 1);\n\n      posX = e.pageX - startX;\n      posY = e.pageY - startY;\n    }\n\n    render();\n  }\n\n  function endMove(e) {\n    e.preventDefault();\n    isMoving = false;\n    document.body.classList.remove('cursor-move');\n  }\n\n  const noop = () => 0;\n\n  // todo(vmyshko): make mobile touch work\n  //android phone touch-screen\n  // window.addEventListener('touchstart', startMove, { passive: false });\n  // window.addEventListener('touchend', endMove, { passive: false });\n  // window.addEventListener('touchcancel', endMove, { passive: false });\n  // window.addEventListener('touchmove', move, { passive: false });\n\n  //mouse wheel / macbook touch-pad zoom gesture\n  // mac touchpad scroll map also works just based on wheel\n  window.addEventListener('wheel', zoom, { passive: false });\n\n  // mac doesn't use these at all, do we need them then?\n  window.addEventListener('gesturestart', startMove, { passive: false });\n  window.addEventListener('gesturechange', move, { passive: false });\n  window.addEventListener('gestureend', endMove, { passive: false });\n\n  //pc mouse events\n  window.addEventListener('mousedown', startMove, { passive: false });\n  window.addEventListener('mousemove', move, { passive: false });\n  window.addEventListener('mouseup', endMove, { passive: false });\n\n  // scale approoach for mobile\n  // (function onScale(el, callback) {\n  //   let hypo = undefined;\n\n  //   console.log('on scale init');\n\n  //   el.addEventListener(\n  //     'touchmove',\n  //     function(event) {\n  //       event.stopPropagation();\n  //       if (event.touches.length === 2) {\n  //         let hypo1 = Math.hypot(\n  //           event.touches[0].pageX - event.touches[1].pageX,\n  //           event.touches[0].pageY - event.touches[1].pageY,\n  //         );\n  //         if (hypo === undefined) {\n  //           hypo = hypo1;\n  //         }\n  //         callback(hypo1 / hypo);\n  //       }\n  //     },\n  //     { passive: false },\n  //   );\n\n  //   el.addEventListener(\n  //     'touchend',\n  //     function(event) {\n  //       hypo = undefined;\n  //     },\n  //     { passive: false },\n  //   );\n  // })(window, delta => {\n  //   console.log(delta);\n  //   scale -= delta * 0.1;\n\n  //   scale = Math.max(MIN_SCALE, scale);\n  //   scale = Math.min(MAX_SCALE, scale);\n\n  //   render();\n  // });\n\n  console.log('zoom init done');\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/firestore';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyBrLjfuTRzphTHh_9V7Aik-jTLylWfAnt0',\n  authDomain: 'power-grid-c1320.firebaseapp.com',\n  databaseURL: 'https://power-grid-c1320.firebaseio.com',\n  projectId: 'power-grid-c1320',\n  storageBucket: 'power-grid-c1320.appspot.com',\n  messagingSenderId: '458551111011',\n  appId: '1:458551111011:web:58bbe6f37b886a81c73756',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useEffect } from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport cx from 'classnames';\n\nimport { AuthRoute } from './components/auth/auth-route';\nimport VersionHolder from './components/version-holder';\nimport Login from './components/auth/login';\nimport Register from './components/auth/register';\nimport StatusHolder from './components/auth/status-holder';\n\nimport { useGlobal } from './use-global';\nimport { AnonRoute } from './components/auth/anon-route';\nimport RoomsRouter from './components/rooms/rooms-router';\n\nimport './App.css';\nimport { ws } from './services/web-socket';\nimport MapPreview from './components/map/map-preview';\n\nexport default function App() {\n  const global = useGlobal();\n  const [{ isOnline }, {}] = global;\n\n  useEffect(() => {\n    if (isOnline) return;\n\n    ws.connect(global);\n  }, [isOnline]);\n\n  return (\n    <Router>\n      <div className={cx('app', { 'is-online': isOnline })}>\n        <VersionHolder />\n        <StatusHolder />\n\n        <Switch>\n          {/* AUTH */}\n          <AnonRoute path=\"/login\">\n            <Login />\n          </AnonRoute>\n          <AnonRoute path=\"/register\">\n            <Register />\n          </AnonRoute>\n          {/* ROOMS */}\n          <AuthRoute path=\"/rooms\">\n            <RoomsRouter />\n          </AuthRoute>\n          {/* maps */}\n          <Route path=\"/maps/:mapId\">\n            <MapPreview />\n          </Route>\n\n          {/* GAME */}\n          {/* // todo(vmyshko): add intermediate page that would define where to redirect user */}\n          <Route path=\"/\">\n            <Redirect to=\"/rooms\" />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n"],"sourceRoot":""}