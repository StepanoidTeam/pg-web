{"version":3,"sources":["assets/wires-20.svg","assets/connection-from.svg","assets/connection-to.svg","services/cookie.service.js","use-global.js","components/auth/auth-route.jsx","config.js","services/api-request.js","components/version-holder.js","services/version.service.js","components/common/input.jsx","components/auth/login.jsx","services/auth.service.js","components/auth/register.jsx","components/auth/status.jsx","components/auth/anon-route.jsx","components/rooms/rooms-list.jsx","services/room.service.js","services/game.service.js","components/rooms/current-room.jsx","components/rooms/new-room.jsx","services/map.service.js","components/rooms/rooms-router.jsx","services/web-socket.js","components/map/city-card.jsx","components/map/math-helpers.js","components/map/city-connector-offsets.js","components/map/wired-connection.jsx","components/map/map-preview.jsx","serviceWorker.js","index.js","App.js"],"names":["module","exports","CookieService","key","value","expireDays","expirationDate","Date","now","msDay","document","cookie","toUTCString","split","map","val","find","ckey","pastDate","forEach","delete","initialState","isOnline","apiVersion","authToken","get","isAuthenticated","user","counter","rooms","game","GameRoomId","playerBoards","_usePlayerBoard","store","Id","state","p","pb","setState","filter","actions","setOnline","status","setApiVersion","addToCounter","setUserData","AuthToken","id","name","Name","set","clearUserData","setRooms","setUserJoin","setPlayerBoard","EntityType","Color","IsDone","Money","setUserLeave","setPlayerBoards","setPlayerColor","playerBoard","console","warn","setPlayerIsDone","useGlobal","globalHook","React","AuthRoute","children","rest","render","location","to","pathname","from","apiUrl","apiRequest","endpoint","a","async","fetch","response","ok","json","data","Promise","reject","webVersion","require","version","VersionHolder","useEffect","then","className","Input","props","isFocused","this","label","helperText","icon","errorText","onChange","isEmpty","length","hasError","cx","type","event","target","onFocus","onBlur","title","Component","Login","useState","username","setUsername","password","setPassword","errorMessage","setErrorMessage","history","useHistory","useLocation","onClick","headers","method","body","JSON","stringify","logIn","debug","replace","catch","error","message","Register","register","Status","gameRoomId","lastActivityTime","getStatus","push","encodeURIComponent","AnonRoute","RoomList","onRoomJoin","roomId","joinRoom","getRoomList","room","UserCount","toggleReady","CurrentRoom","_roomId","useParams","decodeURIComponent","getGameStatus","PlayerBoards","currentRoom","r","onChangeColor","userId","changeColor","onKick","playerId","kickPlayer","boardsSorted","sortBy","allReady","every","b","board","style","color","isReady","onToggleReady","leaveRoom","disabled","NewRoom","mapList","setMapList","getMapList","maps","width","mapId","roomConfig","createRoom","RoomsIndex","path","useRouteMatch","exact","fixWsJson","startsWith","substring","indexOf","ws","globals","BroadcastReason","Users","wsOnEvent","parse","reducer","addEventListener","send","Type","removeEventListener","WebSocket","close","CitySlot","cost","CityCard","x","y","left","top","getDistance","cityConnectorOffsets","slotSize","col","row","WiredConnection","fromOffsets","cco","toOffsets","dists","fromPoint","toPoint","minBy","nearestConnection","nearestFrom","nearestTo","distance","angle","Math","atan2","PI","wireOffset","connectionOffset","connectionSize","height","viewBox","viewTarget","transform","fill","xlinkHref","connectionFromSvg","connectionToSvg","cy","opacity","patchXY","item","CoordX","CoordY","MapPreview","mapData","setMapData","getMap","log","position","boxShadow","xmlns","xmlnsXlink","patternContentUnits","preserveAspectRatio","wiresSvg","stdDeviation","dx","dy","floodColor","Connectors","conn","Cities","city","City1Key","City2Key","Cost","Boolean","window","hostname","match","ReactDOM","global","connect","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3451d6c3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wires-20.b1c5e4e0.svg\";","module.exports = __webpack_public_path__ + \"static/media/connection-from.e75d5b32.svg\";","module.exports = __webpack_public_path__ + \"static/media/connection-to.93da9075.svg\";","export default class CookieService {\n  static msDay = 24 * 60 * 60 * 1000;\n\n  static set(key, value, expireDays = 1) {\n    const expirationDate = new Date(\n      Date.now() + expireDays * CookieService.msDay,\n    );\n\n    document.cookie = `${key}=${value};expires=${expirationDate.toUTCString()};path=/`;\n  }\n\n  static get(key) {\n    const cookies = document.cookie.split('; ').map(val => val.split('='));\n\n    const [, value] = cookies.find(([ckey, value]) => ckey === key) || [\n      null,\n      null,\n    ];\n\n    return value;\n  }\n\n  static delete(key) {\n    const pastDate = new Date(0);\n    document.cookie = `${key}=;expires=${pastDate.toUTCString()};path=/`;\n  }\n\n  static clear() {\n    const cookies = document.cookie.split('; ').map(val => val.split('='));\n\n    cookies.forEach(([key]) => CookieService.delete(key));\n  }\n}\n","import React from 'react';\nimport globalHook from 'use-global-hook';\n\nimport CookieService from './services/cookie.service';\n\nconst initialState = {\n  isOnline: false,\n  apiVersion: null,\n  //todo: get token from cookie?\n  authToken: CookieService.get('authToken'),\n  isAuthenticated: false,\n  user: null,\n  counter: 0,\n  rooms: [],\n  //game\n  game: {\n    GameRoomId: null,\n    playerBoards: [],\n  },\n};\n\nfunction _usePlayerBoard(store, { Id }) {\n  const playerBoard = store.state.game.playerBoards.find(p => p.Id === Id);\n\n  return [\n    playerBoard,\n    pb => {\n      store.setState({\n        game: {\n          ...store.state.game,\n          playerBoards: [\n            ...store.state.game.playerBoards.filter(p => p.Id !== Id),\n            pb,\n          ],\n        },\n      });\n    },\n  ];\n}\n\nconst actions = {\n  //common\n  setOnline(store, status = true) {\n    store.setState({ isOnline: status });\n  },\n  setApiVersion(store, apiVersion) {\n    store.setState({ apiVersion });\n  },\n  //debug\n  addToCounter(store, value) {\n    store.setState({\n      counter: store.state.counter + 1,\n    });\n  },\n  //user-data\n  setUserData(store, { AuthToken: authToken, Id: id, Name: name, GameRoomId }) {\n    store.setState({\n      authToken,\n      user: { id, name },\n      isAuthenticated: true,\n      game: {\n        ...store.state.game,\n        GameRoomId,\n      },\n    });\n\n    CookieService.set('authToken', authToken);\n  },\n  clearUserData(store) {\n    store.setState({\n      authToken: null,\n      user: null,\n      isAuthenticated: false,\n    });\n    CookieService.delete('authToken');\n  },\n  //rooms\n  setRooms(store, rooms) {\n    store.setState({\n      rooms,\n    });\n  },\n  setUserJoin(store, user) {\n    //{EntityType: \"User\", Id: \"u#88173017\", Name: \"kekster2000\"}\n    //lack of:\n    // {\n    //       Color: 4,\n    //       EntityType: 'PlayerBoard',\n    //       Id: 'u#88173017',\n    //       IsDone: false,\n    //       Money: 0,\n    //       Name: 'kekster2000',\n    //     }\n\n    const [, setPlayerBoard] = _usePlayerBoard(store, { Id: user.Id });\n\n    const newPlayerBoard = {\n      ...user,\n      //defaults that izya zajopilsya prislat'\n      EntityType: 'PlayerBoard',\n      Color: 0,\n      IsDone: true, // todo(vmyshko): this is shit, server remembers is done for left users\n      Money: 0,\n    };\n\n    setPlayerBoard(newPlayerBoard);\n  },\n  setUserLeave(store, { Id }) {\n    store.setState({\n      game: {\n        ...store.state.game,\n        playerBoards: [\n          ...store.state.game.playerBoards.filter(p => p.Id !== Id),\n        ],\n      },\n    });\n  },\n  //game\n  setPlayerBoards(store, playerBoards) {\n    store.setState({\n      game: {\n        ...store.state.game,\n        playerBoards,\n      },\n    });\n  },\n  setPlayerColor(store, { Id, Color }) {\n    const [playerBoard, setPlayerBoard] = _usePlayerBoard(store, { Id });\n\n    if (!playerBoard) return console.warn(`${Id} not found`);\n    playerBoard.Color = Color;\n\n    setPlayerBoard(playerBoard);\n  },\n  setPlayerIsDone(store, { Id, IsDone }) {\n    const [playerBoard, setPlayerBoard] = _usePlayerBoard(store, { Id });\n    if (!playerBoard) return console.warn(`${Id} not found`);\n\n    playerBoard.IsDone = IsDone;\n\n    setPlayerBoard(playerBoard);\n  },\n};\n\nexport const useGlobal = globalHook(React, initialState, actions);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport { useGlobal } from \"../../use-global\";\n\nexport function AuthRoute({ children, ...rest }) {\n  const [{ isAuthenticated }] = useGlobal();\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAuthenticated ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n","export const apiUrl = 'https://pg-api.azurewebsites.net/api';\nexport const wsUrl = 'wss://pg-api.azurewebsites.net/api';\n","import { apiUrl } from \"../config\";\n\nexport async function apiRequest(endpoint, ...rest) {\n  try {\n    const response = await fetch(`${apiUrl}/${endpoint}`, ...rest);\n\n    if (!response.ok) {\n      throw await response.json();\n    }\n\n    const json = await response.json();\n    return json.data;\n  } catch (error) {\n    console.warn(\"api error\", error);\n\n    return Promise.reject(error);\n  }\n}\n","import React, { useEffect } from 'react';\n\nimport { useGlobal } from '../use-global';\nimport { getApiVersion } from '../services/version.service';\nimport './version-holder.css';\n\nconst { version: webVersion } = require('../../package.json');\n\nexport default function VersionHolder() {\n  const [{ apiVersion }, { setApiVersion }] = useGlobal();\n\n  useEffect(() => {\n    getApiVersion().then(apiVersion => {\n      setApiVersion(apiVersion);\n    });\n  }, []);\n\n  return (\n    <div className=\"version-holder flex-column m-1\">\n      <span>web: {webVersion}</span>\n      <span>api: {apiVersion}</span>\n    </div>\n  );\n}\n","import { apiRequest } from \"./api-request\";\n\nexport async function getApiVersion() {\n  return apiRequest(\"version\").then(data => data.version);\n}\n","import React from \"react\";\nimport cx from \"classnames\";\n\nimport \"./input.css\";\n\nexport default class Input extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isFocused: false\n    };\n  }\n\n  render() {\n    const { label, value, helperText, icon, errorText, onChange } = this.props;\n    const { isFocused } = this.state;\n    const isEmpty = value.length === 0;\n    const hasError = !!errorText;\n\n    return (\n      <label\n        className={cx(\"input cursor-pointer\", {\n          \"is-focused\": isFocused,\n          \"is-empty\": isEmpty,\n          \"has-error\": hasError\n        })}\n      >\n        <div className=\"input-body flex-row justify-between\">\n          <div className=\"flex-column justify-center position-relative w-100 px-2\">\n            <div className=\"input-label\">{label}</div>\n\n            <input\n              className=\"input-value w-100\"\n              type=\"text\"\n              value={value}\n              onChange={event => onChange(event.target.value)}\n              onFocus={() => this.setState({ isFocused: true })}\n              onBlur={() => this.setState({ isFocused: false })}\n            />\n          </div>\n          {icon && !hasError && (\n            <i className=\"input-icon material-icons flex-row align-center mx-2\">\n              {icon}\n            </i>\n          )}\n          {hasError && (\n            <i className=\"error-icon material-icons flex-row align-center mx-2\">\n              error\n            </i>\n          )}\n        </div>\n        <hr className=\"m-0\" />\n        <div className=\"input-footer flex-row ml-2\">\n          {helperText && !hasError && (\n            <span className=\"helper-text text-ellipsis\" title={helperText}>\n              {helperText}\n            </span>\n          )}\n          {hasError && (\n            <span className=\"error-text text-ellipsis\" title={errorText}>\n              {errorText}\n            </span>\n          )}\n        </div>\n      </label>\n    );\n  }\n}\n","import React, { useState } from 'react';\nimport { useHistory, useLocation, Link } from 'react-router-dom';\n\nimport Input from '../common/input';\nimport { logIn } from '../../services/auth.service';\nimport { useGlobal } from '../../use-global';\n\nexport default function Login() {\n  const [{}, { setUserData }] = useGlobal();\n  const [username, setUsername] = useState('kekster2000');\n  const [password, setPassword] = useState('qwerty123');\n  const [errorMessage, setErrorMessage] = useState(null);\n  const history = useHistory();\n  const location = useLocation();\n\n  const { from } = location.state || { from: { pathname: '/' } };\n\n  const onLogIn = () => {\n    logIn({ username, password })\n      .then(data => {\n        setUserData(data);\n        console.debug('login ok', data);\n        history.replace(from);\n      })\n      .catch(error => {\n        console.warn('login failed', error);\n        setErrorMessage(error.message);\n      });\n  };\n\n  return (\n    <div className=\"form flex-column\">\n      <Input\n        label=\"username\"\n        value={username}\n        helperText=\"username should be strong enough\"\n        errorText={errorMessage}\n        icon=\"face\"\n        onChange={value => setUsername(value)}\n      />\n      <Input\n        label=\"password\"\n        value={password}\n        helperText=\"keep password simple\"\n        icon=\"lock\"\n        onChange={value => setPassword(value)}\n      />\n\n      <button\n        className=\"button flex-row align-center justify-center\"\n        onClick={onLogIn}\n      >\n        <span>log in</span>\n        <i className=\"material-icons\">arrow_forward</i>\n      </button>\n      <span className=\"p-2 flex-row justify-between\">\n        Don't have an account?\n        <Link to=\"/register\">register</Link>\n      </span>\n    </div>\n  );\n}\n","import { apiRequest } from \"./api-request\";\n\nexport function logIn({ username, password }) {\n  return apiRequest(\"auth/login\", {\n    // todo(vmyshko): make common\n    headers: {\n      \"Content-type\": \"application/json\"\n    },\n    method: \"POST\",\n    body: JSON.stringify({ username, password })\n  });\n}\n\nexport function register({ username, password }) {\n  return apiRequest(\"auth/register\", {\n    // todo(vmyshko): make common\n    headers: {\n      \"Content-type\": \"application/json\"\n    },\n    method: \"POST\",\n    body: JSON.stringify({ username, password })\n  });\n}\n\nexport function getStatus(authToken) {\n  return (\n    apiRequest(\"auth/status\", {\n      // todo(vmyshko): make common\n      headers: {\n        \"Content-type\": \"application/json\",\n        authToken\n      },\n      method: \"POST\",\n      body: JSON.stringify({\n        gameRoomId: true,\n        lastActivityTime: true,\n        isOnline: true,\n        authToken: true,\n        id: true,\n        name: true\n      })\n    })\n      // todo(vmyshko): izya to fix this data.data\n      .then(data => data.data)\n  );\n}\n","import React, { useState } from 'react';\nimport { useHistory, useLocation, Link } from 'react-router-dom';\n\nimport Input from '../common/input';\nimport { register } from '../../services/auth.service';\nimport { useGlobal } from '../../use-global';\n\nexport default function Register() {\n  const [{}, { setUserData }] = useGlobal();\n  const [username, setUsername] = useState('jailbot007');\n  const [password, setPassword] = useState('kek123');\n  const [errorMessage, setErrorMessage] = useState(null);\n  const history = useHistory();\n  const location = useLocation();\n\n  const { from } = location.state || { from: { pathname: '/' } };\n\n  const onRegister = () => {\n    register({ username, password })\n      .then(data => {\n        setUserData(data);\n        console.debug('register ok:', data);\n        history.replace(from);\n      })\n      .catch(error => {\n        console.warn('register failed:', error.message);\n        setErrorMessage(error.message);\n      });\n  };\n\n  return (\n    <div className=\"form flex-column\">\n      <Input\n        label=\"username\"\n        value={username}\n        helperText=\"username should be strong enough\"\n        errorText={errorMessage}\n        icon=\"face\"\n        onChange={value => setUsername(value)}\n      />\n      <Input\n        label=\"password\"\n        value={password}\n        helperText=\"keep password simple\"\n        icon=\"lock\"\n        onChange={value => setPassword(value)}\n      />\n\n      <button\n        className=\"button flex-row align-center justify-center\"\n        onClick={onRegister}\n      >\n        <span>register</span>\n        <i className=\"material-icons\">add_box</i>\n      </button>\n      <span className=\"p-2 flex-row justify-between\">\n        Already have an account?\n        <Link to=\"/login\">log in</Link>\n      </span>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\n\nimport { getStatus } from \"../../services/auth.service\";\n\nimport \"./status.css\";\nimport { useGlobal } from \"../../use-global\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function Status() {\n  const history = useHistory();\n  const [\n    { authToken, isAuthenticated, user },\n    { setUserData, clearUserData }\n  ] = useGlobal();\n\n  useEffect(() => {\n    authToken &&\n      !isAuthenticated &&\n      getStatus(authToken)\n        .then(data => {\n          setUserData(data);\n\n          //if user in room - redirect\n          if (data.GameRoomId) {\n            history.push(`rooms/${encodeURIComponent(data.GameRoomId)}`);\n          }\n        })\n        .catch(clearUserData);\n  }, []);\n\n  return (\n    <div className=\"status flex-column align-end p-1\">\n      {isAuthenticated ? (\n        <div className=\"flex-row align-center\">\n          <div className=\"flex-row align-center mx-2\">\n            <i className=\"material-icons px-1\">face</i>\n            <span>{user.name}</span>\n          </div>\n\n          <button\n            className=\"button flex-row align-center px-3\"\n            onClick={clearUserData}\n          >\n            <span> log out</span>\n            <i className=\"material-icons\">exit_to_app</i>\n          </button>\n        </div>\n      ) : (\n        <div>unauthorized</div>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport { useGlobal } from \"../../use-global\";\n\nexport function AnonRoute({ children, ...rest }) {\n  const [{ isAuthenticated }] = useGlobal();\n\n  return (\n    <Route\n      {...rest}\n      render={() => (!isAuthenticated ? children : <Redirect to=\"/\" />)}\n    />\n  );\n}\n","import React, { useEffect } from 'react';\n\nimport { useGlobal } from '../../use-global';\nimport { getRoomList, joinRoom } from '../../services/room.service';\nimport { useHistory } from 'react-router-dom';\n\nimport './rooms.css';\n\nexport default function RoomList() {\n  const history = useHistory();\n  const [{ authToken, rooms }, { setRooms }] = useGlobal();\n\n  const onRoomCreate = () => {\n    history.push(`/rooms/new`);\n  };\n\n  const onRoomJoin = roomId => {\n    joinRoom(authToken, roomId).then(data => {\n      // todo(vmyshko): get rid of # in game object ids (izya)\n      history.push(`/rooms/${encodeURIComponent(roomId)}`);\n    });\n  };\n\n  useEffect(() => {\n    getRoomList(authToken).then(rooms => {\n      setRooms(rooms);\n    });\n  }, []);\n\n  return (\n    <div className=\"rooms form flex-column p-2\">\n      <h1 className=\"mx-2\">rooms</h1>\n      <ul className=\"room-list list flex-column p-1 m-2\">\n        {rooms\n          //[...rooms, ...rooms, ...rooms]\n          //.filter(r => !r.IsInGame)\n          .map(room => (\n            <li\n              className=\"list-item flex-row align-center p-2 m-1\"\n              key={room.Id}\n            >\n              <span className=\"room-name fill-left\">{room.Name}</span>\n\n              <div className=\"flex-row align-center\">\n                <i className=\"material-icons\">group</i>\n                <span className=\"px-1\">{room.UserCount}</span>\n\n                <button className=\"button\" onClick={() => onRoomJoin(room.Id)}>\n                  join\n                </button>\n              </div>\n            </li>\n          ))}\n      </ul>\n\n      <button\n        className=\"button flex-row align-center justify-center m-2\"\n        onClick={onRoomCreate}\n      >\n        <span>create new room</span>\n        <i className=\"material-icons\">add_box</i>\n      </button>\n    </div>\n  );\n}\n","import { apiRequest } from './api-request';\n\nexport function getRoomList(authToken) {\n  return apiRequest('room/list', {\n    // todo(vmyshko): make common\n    headers: {\n      'Content-type': 'application/json',\n      authToken,\n    },\n    method: 'GET',\n    //body: JSON.stringify({ username, password })\n  });\n}\n\nexport function joinRoom(authToken, roomId) {\n  return apiRequest('room/join', {\n    // todo(vmyshko): make common\n    headers: {\n      'Content-type': 'application/json',\n      authToken,\n    },\n    method: 'POST',\n    body: JSON.stringify({ roomId }),\n  });\n}\n\nexport function leaveRoom(authToken) {\n  return apiRequest('room/leave', {\n    // todo(vmyshko): make common\n    headers: {\n      'Content-type': 'application/json',\n      authToken,\n    },\n    method: 'POST',\n    //body: JSON.stringify({ roomId })\n  });\n}\n\nexport function kickPlayer(authToken, playerId) {\n  // todo(vmyshko): izya pes, we need common approach here - just body param, not url\n  return apiRequest(`room/kick?username=${playerId}`, {\n    // todo(vmyshko): make common\n    headers: {\n      'Content-type': 'application/json',\n      authToken,\n    },\n    method: 'POST',\n    body: JSON.stringify({ username: playerId }),\n  });\n}\nexport function createRoom(authToken, roomConfig) {\n  return apiRequest('room/create', {\n    // todo(vmyshko): make common\n    headers: {\n      'Content-type': 'application/json',\n      authToken,\n    },\n    method: 'POST',\n    body: JSON.stringify({\n      //name: 'new room',\n      // setReadyMark: true,\n      // gameRounds: 0,\n    }),\n  });\n}\n","import { apiRequest } from \"./api-request\";\n\nexport function getGameStatus(authToken) {\n  return apiRequest(\"game/status\", {\n    // todo(vmyshko): make common\n    headers: {\n      \"Content-type\": \"application/json\",\n      authToken\n    },\n    method: \"GET\"\n    //body: JSON.stringify({ roomId })\n  });\n}\n\nexport function changeColor(authToken, userId) {\n  return apiRequest(\"game/changeColor\", {\n    // todo(vmyshko): make common\n    headers: {\n      \"Content-type\": \"application/json\",\n      authToken\n    },\n    method: \"POST\",\n    body: JSON.stringify({ userId })\n  });\n}\n\nexport function toggleReady(authToken, state = true) {\n  return apiRequest(\"game/toggleReady\", {\n    // todo(vmyshko): make common\n    headers: {\n      \"Content-type\": \"application/json\",\n      authToken\n    },\n    method: \"POST\",\n    body: JSON.stringify({ state })\n  });\n}\n","import React, { useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { sortBy } from 'lodash';\n\nimport {\n  getGameStatus,\n  changeColor,\n  toggleReady,\n} from '../../services/game.service';\nimport { useGlobal } from '../../use-global';\nimport { leaveRoom, kickPlayer } from '../../services/room.service';\n\nexport default function CurrentRoom() {\n  const { _roomId } = useParams();\n  const history = useHistory();\n  const roomId = decodeURIComponent(_roomId);\n\n  const [{ authToken, rooms, game }, { setPlayerBoards }] = useGlobal();\n  const { playerBoards } = game;\n\n  useEffect(() => {\n    getGameStatus(authToken).then(data => {\n      setPlayerBoards(data.PlayerBoards);\n    });\n  }, []);\n\n  const currentRoom = rooms.find(r => r.Id === roomId);\n\n  if (!currentRoom) return null;\n\n  const onLeave = () => {\n    leaveRoom(authToken).then(() => {\n      history.push('/rooms');\n    });\n  };\n\n  const onChangeColor = userId => {\n    //change for yourself or for another if admin?\n    //seems it always change mine, no matter what userid was sent\n    changeColor(authToken, userId).then(() => {\n      //refresh\n    });\n  };\n  const onToggleReady = (userId, isReady = true) => {\n    //todo: just check for current\n    //todo:save current state and toggle on/off\n    toggleReady(authToken, isReady).then(() => {\n      //refresh?\n    });\n  };\n  const onGameStart = () => {};\n  const onAddBot = () => {};\n  const onKick = playerId => {\n    kickPlayer(authToken, playerId).then(() => {\n      //refresh?\n    });\n  };\n\n  const boardsSorted = sortBy(playerBoards, 'Id');\n\n  const allReady = boardsSorted.every(b => b.IsDone);\n\n  return (\n    <div className=\"form flex-column p-2\">\n      <h1 className=\"flex-row mx-2\">\n        <span className=\"fill-left\">{currentRoom.Name}</span>\n\n        <div className=\"flex-row align-center\">\n          <i className=\"material-icons\">group</i>\n          <span className=\"px-1\">{boardsSorted.length}</span>\n        </div>\n      </h1>\n\n      <ul className=\"player-list list flex-column p-1 m-2\">\n        {boardsSorted.map(board => (\n          <li\n            className=\"list-item flex-row align-center p-2 m-1\"\n            key={board.Id}\n          >\n            <div className=\"player-name flex-row fill-left align-center\">\n              <i\n                className={`city-icon color-${board.Color} cursor-pointer`}\n                onClick={() => onChangeColor(board.Id)}\n              />\n              <span className=\"px-2\">{board.Name}</span>\n            </div>\n\n            <i\n              className=\"material-icons cursor-pointer mx-2\"\n              onClick={() => onKick(board.Name)} // todo(vmyshko): change to id, after api update\n            >\n              delete\n            </i>\n            <i\n              className=\"material-icons cursor-pointer mx-1\"\n              style={{\n                color: board.IsDone ? 'gold' : 'gray',\n              }}\n              onClick={() => onToggleReady(board.Id, !board.IsDone)}\n            >\n              {board.IsDone ? 'thumb_up' : 'thumb_down'}\n            </i>\n          </li>\n        ))}\n      </ul>\n      <div className=\"flex-row align-center\">\n        <button className=\"button mx-1\" onClick={onLeave}>\n          leave\n        </button>\n        <div className=\"fill-left\"></div>\n        <button className=\"button mx-1\" onClick={onAddBot}>\n          add bot\n        </button>\n        <button\n          className={'button mx-1'}\n          disabled={!allReady}\n          onClick={onGameStart}\n        >\n          start game\n        </button>\n      </div>\n    </div>\n  );\n}\n\n// PlayerBoards: [\n//   {\n//     EntityType: \"PlayerBoard\",\n//     Id: \"u#890a5bf3\",\n//     Name: \"Max\",\n//     Color: 0,\n//     Money: 0,\n//     IsDone: false\n//   },\n//   {\n//     EntityType: \"PlayerBoard\",\n//     Id: \"u#88173017\",\n//     Name: \"kekster2000\",\n//     Color: 7,\n//     Money: 0,\n//     IsDone: false\n//   }\n// ];\n","import React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { createRoom } from '../../services/room.service';\nimport { getMapList } from '../../services/map.service';\nimport { useGlobal } from '../../use-global';\n\nexport default function NewRoom() {\n  const [mapList, setMapList] = useState([]);\n  const history = useHistory();\n\n  const [{ authToken }, {}] = useGlobal();\n\n  useEffect(() => {\n    getMapList().then(maps => {\n      setMapList(maps);\n    });\n  }, []);\n\n  const onCreateRoom = () => {\n    createRoom(authToken).then(() => {\n      //navigate?\n    });\n  };\n\n  const onPreviewMap = mapId => {\n    history.push(`/maps/${mapId}`);\n  };\n\n  return (\n    <div className=\"form flex-column p-2\">\n      <h1 className=\"flex-row mx-2\">\n        <span className=\"fill-left\">select map</span>\n      </h1>\n\n      <ul className=\"map-list list flex-column p-1 m-2\" style={{ width: 320 }}>\n        {mapList.map(map => (\n          <li className=\"list-item flex-row align-center p-2 m-1\" key={map}>\n            <span className=\"fill-left\">{map}</span>\n            <button className=\"button\" onClick={() => onPreviewMap(map)}>\n              preview\n            </button>\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"flex-row align-center\">\n        <Link to=\"/rooms\">\n          <button className=\"button mx-1\">quit</button>\n        </Link>\n        <div className=\"fill-left\"></div>\n\n        <button className=\"button mx-1\" onClick={onCreateRoom}>\n          create room\n        </button>\n      </div>\n    </div>\n  );\n}\n","import { apiRequest } from './api-request';\n\nexport function getMapList(authToken) {\n  return apiRequest('maps/list', {\n    // todo(vmyshko): make common\n    headers: {\n      'Content-type': 'application/json',\n      authToken,\n    },\n    method: 'GET',\n    //body: JSON.stringify({ username, password })\n  });\n}\n\nexport function getMap(authToken, mapId) {\n  return apiRequest('maps/map', {\n    // todo(vmyshko): make common\n    headers: {\n      'Content-type': 'application/json',\n      authToken,\n    },\n    method: 'POST',\n    body: JSON.stringify({ mapId }),\n  });\n}\n","import React from 'react';\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\n\nimport RoomsList from './rooms-list';\nimport CurrentRoom from './current-room';\nimport NewRoom from './new-room';\n\nexport default function RoomsIndex() {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={path}>\n        <RoomsList />\n      </Route>\n      <Route path={`${path}/new`}>\n        <NewRoom />\n      </Route>\n      <Route path={`${path}/:_roomId`}>\n        <CurrentRoom />\n      </Route>\n    </Switch>\n  );\n}\n","import { wsUrl } from '../config';\n\n// todo(vmyshko): temporary solution, since Izya sends dirty json-like string with time prefix\n\nfunction fixWsJson(message = '') {\n  if (message.startsWith('{')) {\n    return message;\n  }\n\n  return message.substring(message.indexOf('{'));\n}\n\nclass PgWebSocket {\n  ws = null;\n\n  reducer(message) {\n    const [\n      {},\n      { setPlayerColor, setPlayerIsDone, setUserJoin, setUserLeave },\n    ] = this.globals;\n\n    switch (message.BroadcastReason) {\n      case '/api/game/changecolor': {\n        const [board] = message.PlayerBoards;\n        setPlayerColor(board);\n        break;\n      }\n      case '/api/game/toggleready': {\n        const [board] = message.PlayerBoards;\n        setPlayerIsDone(board);\n        break;\n      }\n      case '/api/room/join': {\n        // todo(vmyshko): this is izya's server shit, need to get new board here\n        if (!message.Users) return;\n\n        const [user] = message.Users;\n        setUserJoin(user);\n        break;\n      }\n      case '/api/room/kick':\n      case '/api/room/leave': {\n        // todo(vmyshko): same reason same entity - different data. fuckin izya...\n        if (!message.Users) return;\n\n        const [user] = message.Users;\n        setUserLeave(user);\n        break;\n      }\n      default: {\n        console.warn('unhandled reason', message.BroadcastReason, message);\n      }\n    }\n  }\n\n  async connect(globals) {\n    this.globals = globals;\n    const [{ authToken }, { setOnline }] = globals;\n\n    const wsMarker = '🌐ws:';\n    const wsOnEvent = event => {\n      const message = JSON.parse(fixWsJson(event.data) || null);\n      console.debug(wsMarker, event.type, message);\n      switch (event.type) {\n        case 'message': {\n          this.reducer(message);\n          break;\n        }\n        case 'open': {\n          this.ws.addEventListener('close', wsOnEvent);\n          this.ws.addEventListener('message', wsOnEvent);\n\n          setOnline(true);\n          this.send({\n            AuthToken: authToken,\n            Type: 'AUTHSTATUS',\n          });\n          break;\n        }\n        case 'close': {\n          this.ws.removeEventListener('open', wsOnEvent);\n          this.ws.removeEventListener('message', wsOnEvent);\n          setOnline(false);\n          break;\n        }\n        default: {\n        }\n      }\n    };\n\n    this.ws = new WebSocket(wsUrl);\n\n    this.ws.addEventListener('open', wsOnEvent);\n  }\n\n  send(data) {\n    this.ws.send(JSON.stringify(data));\n  }\n\n  disconnect() {\n    this.ws.close();\n  }\n}\n\nexport const ws = new PgWebSocket();\n","import React from 'react';\n\nimport './city-card.css';\n\nfunction CitySlot(props) {\n  const { cost } = props;\n  return <div className=\"city-slot m-1 text-stroke\">{cost}</div>;\n}\n\nexport default function CityCard(props) {\n  const { x, y, name } = props;\n\n  return (\n    <>\n      <div\n        className=\"overlay flex-row justify-center align-center\"\n        style={{\n          left: x,\n          top: y,\n        }}\n      >\n        <div className=\"city-card\">\n          <div className=\"city-rows flex-column p-1\">\n            <div className=\"city-slots flex-row\">\n              {[10, 15, 20].map(cost => (\n                <CitySlot key={cost} cost={cost} />\n              ))}\n            </div>\n            <div className=\"position-relative\">\n              <div className=\"overlay w-100 h-100 flex-row align-center justify-center\">\n                <div className=\"city-name px-1 text-stroke\">{name}</div>\n              </div>\n            </div>\n            <div\n              className=\"city-slots flex-row\"\n              // hidden\n              //hidden={Math.random() * 10 > 5}\n            >\n              {[10, 15, 20].map(cost => (\n                <CitySlot key={cost} cost={cost} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","export function getDistance(from, to) {\n  return ((from.x - to.x) ** 2 + (from.y - to.y) ** 2) ** 0.5;\n}\n","import { minBy } from 'lodash';\nimport { getDistance } from './math-helpers';\n\n//init\nconst cityBlockSize = { width: 190, height: 150 }; //80\nconst cols = 3;\nconst rows = 2;\n\nconst cityConnectorOffsets = [];\nconst slotSize = {\n  width: cityBlockSize.width / cols,\n  height: cityBlockSize.height / rows,\n};\n\nfor (let col = 0; col < cols; col++) {\n  for (let row = 0; row < rows; row++) {\n    cityConnectorOffsets.push({\n      x: slotSize.width * (col - (cols - 1) / 2),\n      y: slotSize.height * (row - (rows - 1) / 2),\n    });\n  }\n}\n\nfunction nearestConnection(from, to) {\n  const fromOffsets = cityConnectorOffsets.map(cco => ({\n    x: from.x + cco.x,\n    y: from.y + cco.y,\n  }));\n\n  const toOffsets = cityConnectorOffsets.map(cco => ({\n    x: to.x + cco.x,\n    y: to.y + cco.y,\n  }));\n\n  //get all distances between\n  const dists = [];\n\n  fromOffsets.forEach(fromPoint => {\n    toOffsets.forEach(toPoint => {\n      dists.push([fromPoint, toPoint, getDistance(fromPoint, toPoint)]);\n    });\n  });\n\n  const [nearestFrom, nearestTo, dist] = minBy(dists, ([, , dist]) => dist);\n\n  return [nearestFrom, nearestTo, dist];\n}\n\nexport { nearestConnection };\n","import React from 'react';\nimport connectionFromSvg from '../../assets/connection-from.svg';\nimport connectionToSvg from '../../assets/connection-to.svg';\nimport { nearestConnection } from './city-connector-offsets';\n\nexport default function WiredConnection(props) {\n  const { from, to } = props;\n  const [nearestFrom, nearestTo, distance] = nearestConnection(from, to);\n\n  const angle =\n    (Math.atan2(nearestTo.y - nearestFrom.y, nearestTo.x - nearestFrom.x) *\n      180) /\n    Math.PI;\n\n  const wireOffset = { x: 0, y: -10 };\n  const connectionOffset = { x: -60, y: -16 };\n  const connectionSize = { width: 40, height: 30 };\n\n  return (\n    <g style={{ filter: 'url(#filter-shadow)' }}>\n      <rect\n        height=\"20\"\n        width={distance}\n        x={nearestFrom.x}\n        y={nearestFrom.y}\n        viewBox=\"0 0 100 100\"\n        viewTarget=\"0 0 100 100\"\n        transform={`translate(${wireOffset.x} ${\n          wireOffset.y\n        }) rotate(${angle} ${nearestFrom.x - wireOffset.x} ${nearestFrom.y -\n          wireOffset.y})`}\n        style={{\n          fill: 'url(#wires-pattern)',\n        }}\n      />\n\n      {/* FROM */}\n      <image\n        x={nearestFrom.x}\n        y={nearestFrom.y}\n        width={connectionSize.width}\n        height={connectionSize.height}\n        xlinkHref={connectionFromSvg}\n        transform={`translate(${-connectionOffset.x / 2.5} ${\n          connectionOffset.y\n        }) rotate(${angle} ${nearestFrom.x +\n          connectionOffset.x / 2.5} ${nearestFrom.y - connectionOffset.y})`}\n      />\n      {/* TO */}\n      <image\n        x={nearestTo.x}\n        y={nearestTo.y}\n        width={connectionSize.width}\n        height={connectionSize.height}\n        xlinkHref={connectionToSvg}\n        transform={`translate(${connectionOffset.x} ${\n          connectionOffset.y\n        }) rotate(${angle} ${nearestTo.x - connectionOffset.x} ${nearestTo.y -\n          connectionOffset.y})`}\n      />\n\n      {/* <line\n          x1={nearestFrom.x}\n          y1={nearestFrom.y}\n          x2={nearestTo.x}\n          y2={nearestTo.y}\n          stroke=\"lime\"\n          fill=\"url(#wires-pattern)\"\n          strokeWidth=\"3\"\n        /> */}\n\n      {/* FROM */}\n      <circle\n        cx={nearestFrom.x}\n        cy={nearestFrom.y}\n        r=\"15\"\n        style={{ fill: 'greenyellow', opacity: 0.7 }}\n      />\n      {/* TO */}\n      <circle\n        cx={nearestTo.x}\n        cy={nearestTo.y}\n        r=\"15\"\n        style={{ fill: 'red', opacity: 0.7 }}\n      />\n    </g>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { useGlobal } from '../../use-global';\nimport { getMap } from '../../services/map.service';\n\nimport './map.css';\nimport CityCard from './city-card';\n\nimport wiresSvg from '../../assets/wires-20.svg';\nimport WiredConnection from './wired-connection';\n\n// todo(vmyshko): force izya to update all namings to lowecase etc.\nfunction patchXY(item) {\n  const { CoordX: x, CoordY: y } = item;\n\n  return { ...item, x: x * 1.5, y: y * 2.5 };\n}\n\nexport default function MapPreview() {\n  const { mapId } = useParams();\n  const [{ authToken }, {}] = useGlobal();\n\n  const [mapData, setMapData] = useState(null);\n\n  useEffect(() => {\n    getMap(authToken, mapId).then(mapData => {\n      console.log('🗾', mapData);\n      setMapData(mapData);\n    });\n  }, []);\n\n  if (!mapData) return <div>map preview here</div>;\n\n  const [seattle, boise, billings, sanFran] = [\n    { x: 105, y: 70 },\n    { x: 270, y: 245 },\n    { x: 510, y: 180 },\n    { x: 60, y: 465 },\n  ];\n\n  return (\n    <div>\n      <h1>map</h1>\n      cities\n      <div className=\"map-overlay\">\n        <svg\n          // hidden\n          style={{\n            position: 'absolute',\n            // backgroundColor: '#ffffff60',\n            boxShadow: 'inset 0 0 0 3px black',\n            top: 0,\n            left: 0,\n            // todo(vmyshko): calc auto\n            height: 2360,\n            width: 2470,\n          }}\n          //viewBox=\"-150 -150 150 150\"\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        >\n          <defs>\n            <pattern\n              id=\"wires-pattern\"\n              height=\"100%\"\n              width=\"100%\"\n              viewBox=\"0 0 20 20\"\n              // patternUnits=\"userSpaceOnUse\"\n              patternContentUnits=\"objectBoundingBox\"\n              preserveAspectRatio=\"none\"\n              // preserveAspectRatio=\"xMidYMid slice\"\n            >\n              <image\n                width=\"20\"\n                height=\"20\"\n                preserveAspectRatio=\"xMidYMid slice\"\n                xlinkHref={wiresSvg}\n              />\n            </pattern>\n\n            <filter id=\"filter-shadow\">\n              <feDropShadow\n                stdDeviation=\"0 0\"\n                dx=\"2\"\n                dy=\"2\"\n                floodColor=\"#00000040\"\n              />\n              {/* <feOffset result=\"offOut\" in=\"SourceAlpha\" dx=\"2\" dy=\"2\" />\n              <feBlend in=\"SourceGraphic\" mode=\"normal\" /> */}\n            </filter>\n          </defs>\n\n          {/* <circle cx=\"0\" cy=\"0\" r=\"20\" style={{ fill: 'black' }} /> */}\n\n          {mapData.Connectors.map(conn => {\n            const from = mapData.Cities.find(city => city.Id === conn.City1Key);\n            const to = mapData.Cities.find(city => city.Id === conn.City2Key);\n\n            return (\n              <WiredConnection\n                key={conn.Id}\n                from={patchXY(from)}\n                to={patchXY(to)}\n                cost={conn.Cost}\n              />\n            );\n          })}\n          {/* <WiredConnection from={seattle} to={billings} cost={1} />\n          <WiredConnection from={billings} to={sanFran} cost={9} />\n          <WiredConnection from={sanFran} to={seattle} cost={20} /> */}\n        </svg>\n\n        {mapData.Cities.map(city => {\n          return (\n            <CityCard\n              key={city.Name}\n              x={patchXY(city).x}\n              y={patchXY(city).y}\n              name={city.Name}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useEffect } from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport cx from 'classnames';\n\nimport { AuthRoute } from './components/auth/auth-route';\nimport VersionHolder from './components/version-holder';\nimport Login from './components/auth/login';\nimport Register from './components/auth/register';\nimport Status from './components/auth/status';\n\nimport { useGlobal } from './use-global';\nimport { AnonRoute } from './components/auth/anon-route';\nimport RoomsRouter from './components/rooms/rooms-router';\n\nimport './App.css';\nimport { ws } from './services/web-socket';\nimport MapPreview from './components/map/map-preview';\n\nexport default function App() {\n  const global = useGlobal();\n  const [{ isOnline }, {}] = global;\n\n  useEffect(() => {\n    if (isOnline) return;\n\n    ws.connect(global);\n  }, [isOnline]);\n\n  return (\n    <Router>\n      <div className={cx('app', { 'is-online': isOnline })}>\n        <VersionHolder />\n        <Status />\n\n        <Switch>\n          {/* AUTH */}\n          <AnonRoute path=\"/login\">\n            <Login />\n          </AnonRoute>\n          <AnonRoute path=\"/register\">\n            <Register />\n          </AnonRoute>\n          {/* ROOMS */}\n          <AuthRoute path=\"/rooms\">\n            <RoomsRouter />\n          </AuthRoute>\n          {/* maps */}\n          <Route path=\"/maps/:mapId\">\n            <MapPreview />\n          </Route>\n\n          {/* GAME */}\n          {/* // todo(vmyshko): add intermediate page that would define where to redirect user */}\n          <Route path=\"/\">\n            <Redirect to=\"/rooms\" />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n"],"sourceRoot":""}