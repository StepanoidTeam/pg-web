{"version":3,"sources":["config.js","services/api-request.js","services/version.service.js","services/cookie.service.js","use-global.js","components/auth/auth-route.jsx","components/version-holder.js","components/common/input.jsx","components/auth/login.jsx","services/auth.service.js","components/auth/register.jsx","components/auth/status.jsx","components/auth/anon-route.jsx","components/rooms/rooms-list.jsx","services/room.service.js","components/rooms/current-room.jsx","components/rooms/rooms-router.jsx","serviceWorker.js","index.js","App.js"],"names":["apiUrl","apiRequest","endpoint","a","async","rest","fetch","response","ok","json","data","console","warn","Promise","reject","$apiVersion","then","version","CookieService","key","value","expireDays","expirationDate","Date","now","msDay","document","cookie","toUTCString","split","map","val","find","ckey","pastDate","forEach","delete","initialState","isOnline","authToken","get","isAuthenticated","user","counter","actions","setOnline","store","status","setState","addToCounter","state","setUserData","AuthToken","id","Id","name","Name","set","clearUserData","useGlobal","globalHook","React","AuthRoute","children","render","location","to","pathname","from","webVersion","require","VersionHolder","props","apiVersion","log","catch","err","hasError","finally","isLoading","this","className","JSON","stringify","Component","Input","isFocused","label","helperText","icon","errorText","onChange","isEmpty","length","cx","type","event","target","onFocus","onBlur","title","Login","useState","username","setUsername","password","setPassword","errorMessage","setErrorMessage","history","useHistory","useLocation","onClick","headers","method","body","logIn","replace","error","message","Register","register","Status","useEffect","gameRoomId","lastActivityTime","getStatus","AnonRoute","RoomList","rooms","setRooms","getRoomList","room","UserCount","push","encodeURIComponent","CurrentRoom","_roomId","useParams","roomId","decodeURIComponent","RoomsIndex","path","useRouteMatch","exact","Boolean","window","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.60793379.chunk.js","sourcesContent":["export const apiUrl = \"https://pg-api.azurewebsites.net/api\";\nexport const wsUrl = \"ws://pg-api.azurewebsites.net/api\";\n","import { apiUrl } from \"../config\";\n\nexport async function apiRequest(endpoint, ...rest) {\n  try {\n    const response = await fetch(`${apiUrl}/${endpoint}`, ...rest);\n\n    if (!response.ok) {\n      throw await response.json();\n    }\n\n    const json = await response.json();\n    return json.data;\n  } catch (error) {\n    console.warn(\"api error\", error);\n\n    return Promise.reject(error);\n  }\n}\n","import { apiRequest } from \"./api-request\";\n\n//helper\n//const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n//api method\nexport async function getVersion() {\n  //await sleep(3000);\n  return apiRequest(\"version\").then(data => data.version);\n}\n\n//singletone?\nexport const $apiVersion = getVersion();\n","export default class CookieService {\n  static msDay = 24 * 60 * 60 * 1000;\n\n  static set(key, value, expireDays = 1) {\n    const expirationDate = new Date(\n      Date.now() + expireDays * CookieService.msDay\n    );\n\n    document.cookie = `${key}=${value};expires=${expirationDate.toUTCString()};path=/`;\n  }\n\n  static get(key) {\n    const cookies = document.cookie.split(\"; \").map(val => val.split(\"=\"));\n\n    const [, value] = cookies.find(([ckey, value]) => ckey === key) || [, null];\n\n    return value;\n  }\n\n  static delete(key) {\n    const pastDate = new Date(0);\n    document.cookie = `${key}=;expires=${pastDate.toUTCString()};path=/`;\n  }\n\n  static clear() {\n    const cookies = document.cookie.split(\"; \").map(val => val.split(\"=\"));\n\n    cookies.forEach(([key]) => CookieService.delete(key));\n  }\n}\n","import React from \"react\";\nimport globalHook from \"use-global-hook\";\n\nimport CookieService from \"./services/cookie.service\";\n\nconst initialState = {\n  isOnline: false,\n  //todo: get token from cookie?\n  authToken: CookieService.get(\"authToken\"),\n  isAuthenticated: false,\n  user: null,\n  counter: 0\n};\n\nconst actions = {\n  //online\n  setOnline(store, status = true) {\n    store.setState({ isOnline: status });\n  },\n  //debug\n  addToCounter(store, value) {\n    store.setState({\n      counter: store.state.counter + 1\n    });\n  },\n  //user-data\n  setUserData(store, { AuthToken: authToken, Id: id, Name: name }) {\n    store.setState({\n      authToken,\n      user: { id, name },\n      isAuthenticated: true\n    });\n\n    CookieService.set(\"authToken\", authToken);\n  },\n  clearUserData(store) {\n    store.setState({\n      authToken: null,\n      user: null,\n      isAuthenticated: false\n    });\n    CookieService.delete(\"authToken\");\n  }\n  //\n};\n\nexport const useGlobal = globalHook(React, initialState, actions);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport { useGlobal } from \"../../use-global\";\n\nexport function AuthRoute({ children, ...rest }) {\n  const [{ isAuthenticated }] = useGlobal();\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAuthenticated ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n","import React from \"react\";\nimport { $apiVersion } from \"../services/version.service\";\n\nimport \"./version-holder.css\";\n\nconst { version: webVersion } = require(\"../../package.json\");\nexport default class VersionHolder extends React.Component {\n  constructor(props) {\n    super(props);\n\n    $apiVersion\n      .then(apiVersion => {\n        console.log(apiVersion);\n        this.setState({ apiVersion });\n      })\n      .catch(err => {\n        console.log(\"err\", err);\n        this.setState({ hasError: err });\n      })\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n\n    this.state = {\n      isLoading: true,\n      hasError: null,\n      apiVersion: null,\n      webVersion\n    };\n  }\n\n  render() {\n    const { apiVersion, hasError, isLoading } = this.state;\n\n    return (\n      <div className=\"version-holder flex-column m-1\">\n        {<span>web: {webVersion}</span>}\n        {isLoading && <span>loading...</span>}\n        {!isLoading && apiVersion && <span>api: {apiVersion}</span>}\n\n        {hasError ? <span>Has error: {JSON.stringify(hasError)}</span> : null}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport cx from \"classnames\";\n\nimport \"./input.css\";\n\nexport default class Input extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isFocused: false\n    };\n  }\n\n  render() {\n    const { label, value, helperText, icon, errorText, onChange } = this.props;\n    const { isFocused } = this.state;\n    const isEmpty = value.length === 0;\n    const hasError = !!errorText;\n\n    return (\n      <label\n        className={cx(\"input cursor-pointer\", {\n          \"is-focused\": isFocused,\n          \"is-empty\": isEmpty,\n          \"has-error\": hasError\n        })}\n      >\n        <div className=\"input-body flex-row justify-between\">\n          <div className=\"flex-column justify-center position-relative w-100 px-2\">\n            <div className=\"input-label\">{label}</div>\n\n            <input\n              className=\"input-value w-100\"\n              type=\"text\"\n              value={value}\n              onChange={event => onChange(event.target.value)}\n              onFocus={() => this.setState({ isFocused: true })}\n              onBlur={() => this.setState({ isFocused: false })}\n            />\n          </div>\n          {icon && !hasError && (\n            <i className=\"input-icon material-icons flex-row align-center mx-2\">\n              {icon}\n            </i>\n          )}\n          {hasError && (\n            <i className=\"error-icon material-icons flex-row align-center mx-2\">\n              error\n            </i>\n          )}\n        </div>\n        <hr className=\"m-0\" />\n        <div className=\"input-footer flex-row ml-2\">\n          {helperText && !hasError && (\n            <span className=\"helper-text text-ellipsis\" title={helperText}>\n              {helperText}\n            </span>\n          )}\n          {hasError && (\n            <span className=\"error-text text-ellipsis\" title={errorText}>\n              {errorText}\n            </span>\n          )}\n        </div>\n      </label>\n    );\n  }\n}\n","import React, { useState } from \"react\";\nimport { useHistory, useLocation, Link } from \"react-router-dom\";\n\nimport Input from \"../common/input\";\nimport { logIn } from \"../../services/auth.service\";\nimport { useGlobal } from \"../../use-global\";\n\nexport default function Login() {\n  const [{}, { setUserData }] = useGlobal();\n  const [username, setUsername] = useState(\"kekster2000\");\n  const [password, setPassword] = useState(\"qwerty123\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const history = useHistory();\n  const location = useLocation();\n\n  const { from } = location.state || { from: { pathname: \"/\" } };\n\n  const onLogIn = () => {\n    logIn({ username, password })\n      .then(data => {\n        setUserData(data);\n        console.log(\"login ok\", data);\n        history.replace(from);\n      })\n      .catch(error => {\n        console.warn(\"login failed\", error);\n        setErrorMessage(error.message);\n      });\n  };\n\n  return (\n    <div className=\"form flex-column\">\n      <Input\n        label=\"username\"\n        value={username}\n        helperText=\"username should be strong enough\"\n        errorText={errorMessage}\n        icon=\"face\"\n        onChange={value => setUsername(value)}\n      />\n      <Input\n        label=\"password\"\n        value={password}\n        helperText=\"keep password simple\"\n        icon=\"lock\"\n        onChange={value => setPassword(value)}\n      />\n\n      <button\n        className=\"button flex-row align-center justify-center\"\n        onClick={onLogIn}\n      >\n        <span>log in</span>\n        <i className=\"material-icons\">arrow_forward</i>\n      </button>\n      <span className=\"p-2 flex-row justify-between\">\n        Don't have an account?\n        <Link to=\"/register\">register</Link>\n      </span>\n    </div>\n  );\n}\n","import { apiRequest } from \"./api-request\";\n\nexport function logIn({ username, password }) {\n  return apiRequest(\"auth/login\", {\n    // todo(vmyshko): make common\n    headers: {\n      \"Content-type\": \"application/json\"\n    },\n    method: \"POST\",\n    body: JSON.stringify({ username, password })\n  });\n}\n\nexport function register({ username, password }) {\n  return apiRequest(\"auth/register\", {\n    // todo(vmyshko): make common\n    headers: {\n      \"Content-type\": \"application/json\"\n    },\n    method: \"POST\",\n    body: JSON.stringify({ username, password })\n  });\n}\n\nexport function getStatus(authToken) {\n  return (\n    apiRequest(\"auth/status\", {\n      // todo(vmyshko): make common\n      headers: {\n        \"Content-type\": \"application/json\",\n        authToken\n      },\n      method: \"POST\",\n      body: JSON.stringify({\n        gameRoomId: true,\n        lastActivityTime: true,\n        isOnline: true,\n        authToken: true,\n        id: true,\n        name: true\n      })\n    })\n      // todo(vmyshko): izya to fix this data.data\n      .then(data => data.data)\n  );\n}\n","import React, { useState } from \"react\";\nimport { useHistory, useLocation, Link } from \"react-router-dom\";\n\nimport Input from \"../common/input\";\nimport { register } from \"../../services/auth.service\";\nimport { useGlobal } from \"../../use-global\";\n\nexport default function Register() {\n  const [{}, { setUserData }] = useGlobal();\n  const [username, setUsername] = useState(\"jailbot007\");\n  const [password, setPassword] = useState(\"kek123\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const history = useHistory();\n  const location = useLocation();\n\n  const { from } = location.state || { from: { pathname: \"/\" } };\n\n  const onRegister = () => {\n    register({ username, password })\n      .then(data => {\n        setUserData(data);\n        console.log(\"register ok:\", data);\n        history.replace(from);\n      })\n      .catch(error => {\n        console.warn(\"register failed:\", error.message);\n        setErrorMessage(error.message);\n      });\n  };\n\n  return (\n    <div className=\"form flex-column\">\n      <Input\n        label=\"username\"\n        value={username}\n        helperText=\"username should be strong enough\"\n        errorText={errorMessage}\n        icon=\"face\"\n        onChange={value => setUsername(value)}\n      />\n      <Input\n        label=\"password\"\n        value={password}\n        helperText=\"keep password simple\"\n        icon=\"lock\"\n        onChange={value => setPassword(value)}\n      />\n\n      <button\n        className=\"button flex-row align-center justify-center\"\n        onClick={onRegister}\n      >\n        <span>register</span>\n        <i className=\"material-icons\">add_box</i>\n      </button>\n      <span className=\"p-2 flex-row justify-between\">\n        Already have an account?\n        <Link to=\"/login\">log in</Link>\n      </span>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\n\nimport { getStatus } from \"../../services/auth.service\";\n\nimport \"./status.css\";\nimport { useGlobal } from \"../../use-global\";\n\nexport default function Status() {\n  const [\n    { authToken, isAuthenticated, user },\n    { setUserData, clearUserData }\n  ] = useGlobal();\n\n  useEffect(() => {\n    authToken &&\n      !isAuthenticated &&\n      getStatus(authToken)\n        .then(setUserData)\n        .catch(clearUserData);\n  }, []);\n\n  return (\n    <div className=\"status flex-column align-end p-1\">\n      {isAuthenticated ? (\n        <div className=\"flex-row align-center\">\n          <div className=\"flex-row align-center mx-2\">\n            <i className=\"material-icons px-1\">face</i>\n            <span>{user.name}</span>\n          </div>\n\n          <button\n            className=\"button flex-row align-center px-3\"\n            onClick={clearUserData}\n          >\n            <span> log out</span>\n            <i className=\"material-icons\">exit_to_app</i>\n          </button>\n        </div>\n      ) : (\n        <div>unauthorized</div>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport { useGlobal } from \"../../use-global\";\n\nexport function AnonRoute({ children, ...rest }) {\n  const [{ isAuthenticated }] = useGlobal();\n\n  return (\n    <Route\n      {...rest}\n      render={() => (!isAuthenticated ? children : <Redirect to=\"/\" />)}\n    />\n  );\n}\n","import React, { useState, useEffect } from \"react\";\n\nimport { useGlobal } from \"../../use-global\";\nimport { getRoomList } from \"../../services/room.service\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./rooms.css\";\n\nexport default function RoomList() {\n  const history = useHistory();\n  const [{ authToken }, {}] = useGlobal();\n\n  const [rooms, setRooms] = useState([]);\n\n  const onRoomCreate = () => {\n    history.push(`/rooms/new`);\n  };\n\n  const onRoomJoin = id => {\n    // todo(vmyshko): get rid of # in game object ids (izya)\n    history.push(`/rooms/${encodeURIComponent(id)}`);\n  };\n\n  useEffect(() => {\n    getRoomList(authToken).then(rooms => {\n      setRooms(rooms);\n    });\n  }, []);\n\n  return (\n    <div className=\"rooms form flex-column p-2\">\n      <h1 className=\"m-2\">rooms</h1>\n      <ul className=\"room-list list flex-column p-1 m-2\">\n        {rooms\n          //[...rooms, ...rooms, ...rooms]\n          //.filter(r => !r.IsInGame)\n          .map(room => (\n            <li\n              className=\"list-item flex-row align-center p-2 m-1\"\n              key={room.Id}\n            >\n              <span className=\"room-name\">{room.Name}</span>\n\n              <div className=\"flex-row align-center\">\n                <i className=\"material-icons\">group</i>\n                <span className=\"px-1\">{room.UserCount}</span>\n\n                <button className=\"button\" onClick={() => onRoomJoin(room.Id)}>\n                  join\n                </button>\n              </div>\n            </li>\n          ))}\n      </ul>\n\n      <button\n        className=\"button flex-row align-center justify-center m-2\"\n        onClick={onRoomCreate}\n      >\n        <span>create new room</span>\n        <i className=\"material-icons\">add_box</i>\n      </button>\n    </div>\n  );\n}\n","import { apiRequest } from \"./api-request\";\n\nexport function getRoomList(authToken) {\n  return apiRequest(\"room/list\", {\n    // todo(vmyshko): make common\n    headers: {\n      \"Content-type\": \"application/json\",\n      authToken\n    },\n    method: \"GET\"\n    //body: JSON.stringify({ username, password })\n  });\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function CurrentRoom() {\n  const { _roomId } = useParams();\n\n  const roomId = decodeURIComponent(_roomId);\n\n  return (\n    <div className=\"form\">\n      <h1>Now showing room {roomId}</h1>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useRouteMatch\n} from \"react-router-dom\";\n\nimport RoomsList from \"./rooms-list\";\nimport CurrentRoom from \"./current-room\";\n\nexport default function RoomsIndex() {\n  console.log(\"roomrouter\");\n  const { path } = useRouteMatch();\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path={path}>\n          <RoomsList />\n        </Route>\n        <Route path={`${path}/new`}>\n          <div className=\"form\">new room here</div>\n        </Route>\n        <Route path={`${path}/:_roomId`}>\n          <CurrentRoom />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport cx from \"classnames\";\n\nimport { $apiVersion } from \"./services/version.service\";\nimport { AuthRoute } from \"./components/auth/auth-route\";\nimport VersionHolder from \"./components/version-holder\";\nimport Login from \"./components/auth/login\";\nimport Register from \"./components/auth/register\";\nimport Status from \"./components/auth/status\";\n\nimport \"./App.css\";\nimport { useGlobal } from \"./use-global\";\nimport { AnonRoute } from \"./components/auth/anon-route\";\nimport RoomsRouter from \"./components/rooms/rooms-router\";\n\nexport default function App() {\n  const [{ isOnline, isAuthenticated }, { setOnline }] = useGlobal();\n\n  useEffect(() => {\n    $apiVersion.then(data => setOnline(true));\n  }, []);\n\n  return (\n    <Router>\n      <div className={cx(\"app\", { \"is-online\": isOnline })}>\n        <VersionHolder />\n        <Status />\n\n        <Switch>\n          {/* AUTH */}\n          <AnonRoute path=\"/login\">\n            <Login />\n          </AnonRoute>\n          <AnonRoute path=\"/register\">\n            <Register />\n          </AnonRoute>\n          {/* ROOMS */}\n          <AuthRoute path=\"/rooms\">\n            <RoomsRouter />\n          </AuthRoute>\n          {/* GAME */}\n          {/* // todo(vmyshko): add intermediate page that would define where to redirect user */}\n          <Route path=\"/\">\n            <Redirect to=\"/rooms\" />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n"],"sourceRoot":""}